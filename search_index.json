{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["0691","2","2006","2008","4.0","4149","4378","4446","5069","5168","5501","7554","book","cc","collingbourn","copyright","dark","epub","giba","huw","id","lambda","lambdabook","littl","ltd","mobi","nc","nd","neon","o","oзвo","pdf","permiss","reserv","right","rubi","sapphiresteel","serhiy","softwar","steel","studio","translat","visual","wrdsld"],"chapters/00-Introduction.html":["1","10","1995","1helloworld.rb","2","3","4","5","6","7","8","9","book","ctrl+f5","debugg","def","end","f5","helloname.rb","http://www.sapphiresteel.com","http://www.sapphiresteel.com/rubi","id","lang.org","littl","lt;program","manag","matsumoto","matz","name&gt","perl","programming/th","project","put","python","quot;hello&quot","rail","rubi","ruby.html","saysometh","smalltalk","steel","studio","visual","window","www.rubi","yukihiro","zip"],"chapters/01-Strings-and-Methods.html":["0","0.0","0.175","1","100","100.00","145.5","17.5","2","39","39;enter","3}&quot","a_firstnam","a_name}&quot","a_secondnam","a_secondname}&quot","access","cmd","ctrl","def","easi","end","enter","ex","f5","fred","get","grand","gt","hello","helloname.rb","helloworld.rb","littlebookofruby.sln","lt","main","mainob.rb","method.rb","myvar","name","name:&#39","name}&quot","ob","ob.saysometh","object.rb","price","print","program","put","puts(&quot;hello","puts(&quot;hello&quot","quot","quot;\\n&quot","quot;\\n\\t#{(1","quot;\\t&quot","quot;ent","quot;hello","quot;hello&quot","quot;s&quot","quot;tax","return","return_name(a_firstnam","rubi","s","s.to_f","sampl","saysomet","saysometh","shownam","showname(a_nam","showname}&quot","showstr","steel","string","string_eval.rb","subtot","subtotal+tax}&quot","tax","tax_calculator.rb","taxrat","to_f","total","unless","upcas","uppercase.rb","window","world","world&quot","world&quot;.to_f","world&quot;.upcas"],"chapters/02-Classes-and-Objects.html":["123","1st","2","39","39;miaow&#39","39;woof!&#39","39;woof&#39","adescript","anam","b","c","cat","class","def","descript","description=&quot;an","description}\\n&quot","dog","dog.new","dogs_and_cats.rb","elvish","end","forg","get_nam","glitteri","gold","gold&quot","great","gt","initi","initia","initialize(anam","inspect","instanc","love","lt;treasure:0x28962f8","magic","myclass","myclass.new","mydog","mydog.get_nam","mydog.set_name(&#39;fido&#39","mydog.talk","mynam","name","name=&quot;sword&quot;&gt","new","nil","ob","ob.class","ob.saysometh","object","object_class.rb","p","p(a","p(anobject","p(b","p(c","p.rb","power&quot","print(&quot;100.to_","print(&quot;class.to_","print(&quot;object.to_","print(&quot;string.to_","print(&quot;t.inspect","print(&quot;t.to_","print(&quot;treasure.to_","put","puts(&quot;hello&quot","puts(100.to_","puts(class.to_","puts(object.to_","puts(string.to_","puts(t.inspect","puts(t.to_","puts(treasure.to_","quot","quot;a","quot;an","quot;hello&quot","quot;inspect","quot;th","return","ring","rubi","saysometh","set","set_nam","set_name(anam","someotherdog","string","t","t1","t1.inspect","t1.inspect}&quot","t1.to_","t2","t2.to_","talk","thing","thing&quot","thing.new","thing1","thing1.get_nam","thing1.set_name(&quot;a","think","to_","to_s.rb","treasur","treasure.new(&quot;ring&quot","treasure.new(&quot;sword&quot","treasure.rb","variabl","weapon","weapon&quot","yourdog","yourdog.set_name(&#39;bonzo&#39"],"chapters/03-Class-Hierarchies.html":["3","adescript","adventure1.rb","anam","avalu","class","def","descript","end","exit","get_descript","get_nam","initi","initialize(anam","lt","name","return","room","rubi","set","set_descript","set_nam","set_name(anam","super","super(anam","thing","treasur","valu"],"chapters/04-Accessors-Attributes-Class-Variables.html":["0","1","3","4","800","accessors.rb","accessors2.rb","adescript","adventure2.rb","anam","around","attr_accessor","attr_accessor(:valu","attr_read","attr_reader(:nam","attr_writ","attr_writer(:descript","attr_writer(:nam","attribut","avalu","bit","capit","case","class","def","descript","description&quot","description=(adescript","edges&quot","end","fade","get_descript","guess","id","initi","initialize(anam","inspect","it’","lt","map","modul","name","name.capit","name=(anam","num_th","owner","properti","put","puts(t.descript","puts(t1.descript","puts(t1.get_descript","quot;a","quot;som","quot;thi","return","room","rubi","set","set_descript","string","super(anam","symbol","t.descript","t1.descript","t1.inspect}&quot","t1.set_description(&quot;som","t1.valu","t2.inspect}&quot","thing","thing.initi","to_","tomahto","tomayto","treasur","treasure#initi","treasure.initi","treasure1","treasure2","valu","variabl","worn"],"chapters/05-Arrays.html":["0","1","1+2","1,2,3,4","13,14,15,16","2","3","3.0","39","39;,&#39;w&#39","39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39","39;a&#39","39;a&#39;,&#39;l&#39;,&#39;d&#39;,&#39;o&#39","39;b&#39","39;c&#39","39;h&#39","39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39","39;l&#39","39;o&#39;,&#39","39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39","39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39;],[1,2,3,4","39;two&#39","4","4,4","5","5,5","5,6,7,8","9,10,11,12","a,b,c,d","a1","a1[0","a1[3","a[0","a[1","adventure2.rb","arr","arr2","arr2[0","arr2[2,2","arr2[4..6","arr[0","arr[0,5","arr[0..4","arr[1","arr[3","array","array.new","array.new(2","array.new(2,&#39;hello&#39","array.new(2,&#39;world&#39","array.new(2,&quot;hello","array0.rb","array1.rb","array2.rb","array_assign.rb","array_index.rb","array_length(a0","array_new.rb","b=#{b","c","c=#{c","d=#{d}\\n&quot","def","dir","dir.entries(&#39;c:\\\\&#39","div_array.rb","end","entri","for..end","gt","hello","lt","lt;вираз&gt","map.new([room1,room2,room3","multi_array.rb","multiarr","mymap","new","nil","nil,nil","print","print(&quot;a=#{a","puts(arr[0","puts(arr[1","puts(arr[2","puts(arr[3","puts(i.inspect","quot","quot;a&quot","quot;b&quot","quot;c&quot","quot;d&quot","quot;e&quot","quot;four&quot","quot;h&quot","quot;hello","quot;l&quot","quot;o&quot","quot;one&quot","quot;three&quot","quot;two&quot","quot;w&quot","quot;порожній&quot","return","rubi","string","w","w(thi","window","world","world&quot","world&quot;,&quot;hello","x","y"],"chapters/06-Hashes.html":["1","1,2,3","2","23","3","39;a","39;diamond","39;gold","39;key1&#39;=&gt;&#39;val1&#39","39;key2&#39;=&gt;&#39;val2&#39","39;key3&#39;=&gt;&#39;val3&#39","39;key3&#39;=&gt;&#39;value_3&#39","39;key4&#39;=&gt;&#39;val4&#39","39;key_two&#39;=&gt;&#39;val2&#39","39;loc1&#39","39;loc2&#39","39;room1&#39","39;room2&#39","39;rubi","39;sapphir","39;silver","39;some","39;the","39;treasure1&#39","4","4,5,6","5","6","87","a.flatten","a=[1","amp","au","b","c","c=[1","coq","default","flatten","forest","glade&#39","gt","h1","h1.default","h2","h2.key","h2.keys).flatten.revers","h2.valu","h2[&#39;treasure1&#39","h2[&#39;treasure2&#39","h2[&#39;treasure3&#39","h2[&#39;treasure4&#39","h2[x1","hash","hash.new","hash.new(&quot;som","hash1.rb","hash2.rb","key","kind","lt;&lt","mountain","mysteri","nil","p((h1.key","p(h1.default","p(h1.key","p(h1.valu","p(h1[&#39;unknown_room&#39","p(h2[&#39;unknown_treasure&#39","place&#39","puts(h1[&#39;room2&#39","quot;gold","quot;key1&quot","quot;key2&quot","quot;key3&quot","quot;key4&quot","quot;key_two&quot","quot;rubi","quot;sapphir","quot;som","quot;th","quot;treasure1&quot","quot;treasure2&quot","quot;treasure3&quot","quot;val1&quot","quot;val2&quot","quot;val3&quot","quot;val4&quot","receiv","ring&#39","ring&quot","room&#39","room&quot","rubi","set","stream&#39","throne","treasur","valu","vin","x","x.new(&#39;mi","x1","xobject&#39"],"chapters/07-Loops-and-Iterators.html":["0","1","1,2,3],[3,4,5],[6,7,8]].each","1..10","1..10).each","1..3","10","100","100&#39","2","3","39;два&#39","39;один&#39","39;три&#39","39;три&#39;].each","3].each","4","5","5]].each","7","8","a,b,c","arr.length","array","b","begin","block_syntax.rb","brace","curli","c}&quot","def","do..end","each","each_loop.rb","end","fals","fixnum","for_each.rb","for_loop.rb","for_to.rb","gt","hash","hours_asleep","ii","lt","modifi","pascal","puts(","puts(&#39;x","puts(&#39;храп....&#39","puts(&quot;#{a","puts(&quot;z&quot","puts(arr[i","puts(i","puts(x","quot;do&quot","quot;два&quot","rang","return","rubi","s","set","sleep","snore","string","tire","true","until","until.rb","while.rb","while2.rb","writeln(i","x"],"chapters/08-Conditional-Statements.html":["0","0.0","1","10","10&quot","1000","2","3","39","39;#{i}&#39","39;mon&#39","39;monday&#39","39;q&#39","39;then&#39","39;будень&#39","39;вихідний&#39","39;наділя&#39","39;неділя&#39","39;свято&#39","39;субота&#39","4","5","6","6..7","7","8","800","aday","amp;&amp","and_or.rb","begin","break","c","case","case(i","case.rb","case2.rb","chomp","daytyp","debug","elsif","end","execut","follow","gets().chomp","gt","if..elsif","if..then","if..then..els","if_else.rb","if_else_alt.rb","if_elsif.rb","if_then.rb","if_unless_mod.rb","input","input.to_i","lt","lt;умова&gt","never","print(&quot","put","puts(&#39;ok&#39","puts(&quot","puts(&quot;somevar","puts(&quot;бувай&quot","puts(&quot;вівторок&quot","puts(&quot;неділя!&quot","puts(&quot;понеділок&quot","puts(&quot;п’ятниця&quot","puts(&quot;середа&quot","puts(&quot;субота!&quot","puts(&quot;четвер&quot","quot","quot;уурраа!&quot","rubi","sleep","snore","somevar}&quot","subtot","tire","true","unless","unless.rb","working_overtim","x"],"chapters/09-Modules-and-Mixins.html":["9","badmood","build","c","class","compar","deadli","def","end","enumer","fals","filetest","gc","get","goodmood","greet","hous","includ","inherit","instanc","insurance_cost","invest","kernel","lt;&lt","math","mix","mixin","mod_vars.rb","modul","modules1.rb","modules2.rb","modules3.rb","modules4.rb","myclass","myclass.new","mymodul","mymodule.greet","namespac","new","ob","ob.sayhi","ob.sayhiagain","object","objectspac","pi","power","precis","print","process","put","puts(greet","puts(mymodule.greet","puts(mymodule::goodmood","puts(ob.greet","puts(require(&quot;testmod.rb&quot","quot","quot;c:/mydir&quot","quot;веселий&quot","quot;сварливий&quot","requir","require(&quot;testmod.rb&quot","requiremodule.rb","return","rubi","sayhi","sayhiagain","signal","sqrt","sword","treasur","true","valu","weapon"],"chapters/10-Saving-Files-Moving-On.html":["10","39;w&#39","c","cd","cd_arr","def","end","exist","f","f.write($cd_arr.to_yaml","file","file.exist?($fn","file.open($fn","file.read($fn","http://www.sapphiresteel.com","id","input_data","ironrubi","java","jrubi","loaddb","microsoft","microsystem","net","rail","rubi","sapphir","sapphiresteel","savedb","softwar","steel","sun","vb","www.sapphiresteel.com","yaml","yaml::load(input_data"]},"length":12},"tokenStore":{"root":{"0":{"6":{"9":{"1":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.03619909502262444},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}},".":{"0":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.0392156862745098},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}},"1":{"7":{"5":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}},"docs":{}},"docs":{}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}},"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992}},".":{"0":{"0":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{}},"docs":{}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244}}},"docs":{}},"docs":{}}}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.027559055118110236},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":10}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}},"2":{"3":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}},"3":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"6":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"5":{"docs":{},".":{"5":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"5":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{}}},"9":{"9":{"5":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}},"docs":{}},"docs":{}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":10},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.04072398190045249},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.051181102362204724},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.036101083032490974}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}},"+":{"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},",":{"2":{"docs":{},",":{"3":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}},",":{"4":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},".":{"docs":{},".":{"1":{"0":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"docs":{}},"3":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}},"docs":{}}}},"2":{"0":{"0":{"6":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"8":{"docs":{"./":{"ref":"./","tf":0.038461538461538464}}},"docs":{}},"docs":{}},"3":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":10},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}},"3":{"9":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.08235294117647059},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.10084033613445378},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.04072398190045249},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}},";":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}},"m":{"docs":{},"i":{"docs":{},"a":{"docs":{},"o":{"docs":{},"w":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}},"docs":{}}}}}}},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"o":{"docs":{},"f":{"docs":{},"!":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}},"docs":{}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}},"docs":{}}}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}},"docs":{}},"docs":{}}}},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"w":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"r":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}},"a":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}},"b":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},"docs":{}}}},"c":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},"docs":{}}}},"h":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},"docs":{}}},"o":{"docs":{},"c":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"n":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},";":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}},"h":{"docs":{},"e":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}},"3":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"3":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"3":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}},"4":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"4":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{},"_":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}}}}}}},"i":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"д":{"docs":{},"в":{"docs":{},"а":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992}}},"docs":{}},"docs":{}}}}}},"о":{"docs":{},"д":{"docs":{},"и":{"docs":{},"н":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992}}},"docs":{}},"docs":{}}}}}}},"т":{"docs":{},"р":{"docs":{},"и":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244}},";":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}},"docs":{}},"docs":{}}}}}},"#":{"docs":{},"{":{"docs":{},"i":{"docs":{},"}":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}}}}}},"q":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}}},"docs":{}},"docs":{}}}},"б":{"docs":{},"у":{"docs":{},"д":{"docs":{},"е":{"docs":{},"н":{"docs":{},"ь":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}}},"docs":{}},"docs":{}}}}}}}}},"в":{"docs":{},"и":{"docs":{},"х":{"docs":{},"і":{"docs":{},"д":{"docs":{},"н":{"docs":{},"и":{"docs":{},"й":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}}},"docs":{}},"docs":{}}}}}}}}}}},"н":{"docs":{},"а":{"docs":{},"д":{"docs":{},"і":{"docs":{},"л":{"docs":{},"я":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}}}}}}},"е":{"docs":{},"д":{"docs":{},"і":{"docs":{},"л":{"docs":{},"я":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.021660649819494584}}},"docs":{}},"docs":{}}}}}}}}},"с":{"docs":{},"в":{"docs":{},"я":{"docs":{},"т":{"docs":{},"о":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{}}}}}}},"у":{"docs":{},"б":{"docs":{},"о":{"docs":{},"т":{"docs":{},"а":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.02888086642599278}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":10},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}},".":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"4":{"1":{"4":{"9":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"3":{"7":{"8":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"4":{"4":{"6":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":10},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}},".":{"0":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},",":{"4":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"5":{"docs":{},",":{"6":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}}},"docs":{}}},"5":{"0":{"6":{"9":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"1":{"6":{"8":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"5":{"0":{"1":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":10.009049773755656},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.017467248908296942},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}},",":{"5":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}},"6":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":10.017467248908297},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.01444043321299639}},".":{"docs":{},".":{"7":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}},"docs":{}}}},"7":{"5":{"5":{"4":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":10},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.01444043321299639}}},"8":{"0":{"0":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.01444043321299639}}},"docs":{}},"7":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":10}}},"9":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":10}},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.038461538461538464},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}},"i":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}},"=":{"docs":{},"#":{"docs":{},"{":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.031496062992125984},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.024096385542168676}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"c":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}},"c":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.038461538461538464}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}}}}},"q":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"+":{"docs":{},"f":{"5":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}},"docs":{}}}}}},"m":{"docs":{},"d":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}},"a":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}},"s":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}},"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.021660649819494584}},"(":{"docs":{},"i":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.01444043321299639}}}},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.03081232492997199},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.0125},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}},"=":{"docs":{},"#":{"docs":{},"{":{"docs":{},"c":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}},"[":{"1":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}},"d":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.03896103896103896}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.04332129963898917}}}}}}},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}},"g":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}},"f":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.0196078431372549},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0392156862745098},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.028846153846153848},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.025},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.03614457831325301},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.025974025974025976}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.0673076923076923},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.0875}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"a":{"docs":{},"n":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}},"}":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"o":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.025210084033613446}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815}}}}}},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}}},"=":{"docs":{},"#":{"docs":{},"{":{"docs":{},"d":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"c":{"docs":{},":":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}},"n":{"docs":{},"d":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.027450980392156862},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.06162464985994398},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.025},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.12992125984251968},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.06498194945848375},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.05421686746987952},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.025974025974025976}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}},"r":{"docs":{},"i":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}},"c":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.05905511811023622}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}}}}},"x":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}},"i":{"docs":{},"t":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232}}},"s":{"docs":{},"t":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}},"l":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815}}}}}},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}}}}}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}},"e":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.027450980392156862},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.028846153846153848}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}},"e":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.04216867469879518}}}}}},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.027149321266968326},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.09170305676855896},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.030120481927710843}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}},"c":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}},"h":{"1":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}}}},"2":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.017467248908296942}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}}},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}},"docs":{}},"docs":{}}}},"3":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}},"docs":{}},"docs":{}}}},"4":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}},"x":{"1":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}}}},"docs":{},"u":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.038461538461538464}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.023529411764705882},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.02262443438914027}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}},"/":{"docs":{},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}},"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.01968503937007874}}}}}}}}}}},"s":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.023255813953488372},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.025974025974025976}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.011204481792717087},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.0673076923076923},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.025}},"a":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.011204481792717087},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.011204481792717087},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"i":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"t":{"docs":{},"’":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}},"f":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.06493506493506493}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"o":{"docs":{},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"n":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.027559055118110236},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.018050541516245487}},"d":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},";":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"0":{"docs":{},"x":{"2":{"8":{"9":{"6":{"2":{"docs":{},"f":{"8":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"в":{"docs":{},"и":{"docs":{},"р":{"docs":{},"а":{"docs":{},"з":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.026200873362445413},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}},"у":{"docs":{},"м":{"docs":{},"о":{"docs":{},"в":{"docs":{},"а":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"b":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"3":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"4":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},"docs":{}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}},"z":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}},"h":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}}}},"i":{"docs":{},"n":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"o":{"docs":{},"b":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"p":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"1":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"2":{"docs":{},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"3":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0196078431372549},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"k":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.04216867469879518}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.027149321266968326}}}}}}}}},"i":{"docs":{},"x":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},"i":{"docs":{},"n":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.025974025974025976}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"d":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}},"w":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.011204481792717087},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}},"t":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.0196078431372549},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.03081232492997199},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.09615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.06666666666666667}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}},":":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{}},"docs":{}}}},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}}}}}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}},"i":{"docs":{},"l":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.02262443438914027},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}},",":{"docs":{},"n":{"docs":{},"i":{"docs":{},"l":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.0375}}}}}}}},"o":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}},"з":{"docs":{},"в":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}},"h":{"docs":{},"i":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}},"p":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"d":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.038461538461538464}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}},"l":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}},"n":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.023529411764705882},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}},";":{"1":{"0":{"0":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}},"docs":{}},"docs":{}},"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}}}},"a":{"docs":{},"=":{"docs":{},"#":{"docs":{},"{":{"docs":{},"a":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"u":{"docs":{},"t":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.050980392156862744},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0196078431372549},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}},"s":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}},"docs":{}},"docs":{}},"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.05415162454873646}},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}},"#":{"docs":{},"{":{"docs":{},"a":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}},"z":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}},"б":{"docs":{},"у":{"docs":{},"в":{"docs":{},"а":{"docs":{},"й":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}},"в":{"docs":{},"і":{"docs":{},"в":{"docs":{},"т":{"docs":{},"о":{"docs":{},"р":{"docs":{},"о":{"docs":{},"к":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}}}}}}}}}},"н":{"docs":{},"е":{"docs":{},"д":{"docs":{},"і":{"docs":{},"л":{"docs":{},"я":{"docs":{},"!":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"п":{"docs":{},"о":{"docs":{},"н":{"docs":{},"е":{"docs":{},"д":{"docs":{},"і":{"docs":{},"л":{"docs":{},"о":{"docs":{},"к":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}}}}}}}}}}}}}},"’":{"docs":{},"я":{"docs":{},"т":{"docs":{},"н":{"docs":{},"и":{"docs":{},"ц":{"docs":{},"я":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}}}}}}}}}}}}}},"с":{"docs":{},"е":{"docs":{},"р":{"docs":{},"е":{"docs":{},"д":{"docs":{},"а":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}}}}}}},"у":{"docs":{},"б":{"docs":{},"о":{"docs":{},"т":{"docs":{},"а":{"docs":{},"!":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}}}}}}}}},"ч":{"docs":{},"е":{"docs":{},"т":{"docs":{},"в":{"docs":{},"е":{"docs":{},"р":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}},"#":{"3":{"9":{"docs":{},";":{"docs":{},"x":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244}}},"х":{"docs":{},"р":{"docs":{},"а":{"docs":{},"п":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}},"t":{"1":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"1":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"3":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.031496062992125984}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}},"h":{"1":{"docs":{},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"x":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}}}}}}},"m":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}}}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}},"(":{"docs":{},"a":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"c":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"(":{"docs":{},"h":{"1":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}}},"docs":{}}},"h":{"1":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}}},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"2":{"docs":{},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}}},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}},"i":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.01680672268907563},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.024096385542168676}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}},"n":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.05240174672489083}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.021834061135371178}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":10.076923076923077},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.313953488372093},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.0784313725490196},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.028011204481792718},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.028846153846153848},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.041666666666666664},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.027149321266968326},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.047244094488188976},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.02527075812274368},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.0783132530120482},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.23376623376623376}}},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.10465116279069768},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.06493506493506493}}}},"n":{"docs":{},"g":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.028846153846153848},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.016666666666666666}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}}}},"s":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.015748031496062992}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"h":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.023529411764705882},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815}}}}}}}},"h":{"docs":{},"i":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"i":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.020833333333333332},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.05813953488372093},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196},"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.05194805194805195}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"k":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"f":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.07450980392156863},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.021660649819494584}},"a":{"docs":{},"l":{"docs":{},"+":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.038461538461538464}},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}},"n":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.04330708661417323},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.021660649819494584}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.011811023622047244},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.007220216606498195}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.030120481927710843}}}}}}},"t":{"1":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}},"2":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}},"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.047619047619047616},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.15384615384615385},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.03333333333333333},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.04216867469879518}},"e":{"1":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}},"2":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}},"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}},"a":{"docs":{},"x":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.03137254901960784}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.027450980392156862}}}}}},"l":{"docs":{},"k":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}},"o":{"docs":{},"_":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0392156862745098},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.016666666666666666}},"f":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}}}},"m":{"docs":{},"a":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"a":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}},"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.014005602240896359},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.18269230769230768},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.075}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}},"k":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.04330708661417323},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.021660649819494584}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.019230769230769232},"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}},"n":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}},"l":{"docs":{},"u":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.038461538461538464},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.058333333333333334},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}},"b":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}},"w":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.019230769230769232}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.01809954751131222}},";":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"f":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}},",":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.010830324909747292}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.018072289156626505}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}},"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}}},"f":{"5":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.01568627450980392}}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}},"_":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}},"l":{"docs":{},"s":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"i":{"docs":{},"x":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}},"l":{"docs":{},"e":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.05194805194805195}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"?":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"n":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"n":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"n":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}}},".":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"c":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"y":{"docs":{},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0196078431372549},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.05415162454873646},"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.04819277108433735}},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.023529411764705882},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186},"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435}}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}},"\\":{"docs":{},"t":{"docs":{},"#":{"docs":{},"{":{"docs":{},"(":{"1":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}},"docs":{}}}}}}},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00784313725490196}}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}}},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}},"o":{"docs":{},"m":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.011764705882352941}}}},"h":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0056022408963585435},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}},"i":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"1":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"2":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"docs":{}}}}}}}}},"a":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.008403361344537815},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}},"n":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}}}}}}}},"b":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}}},"c":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}},":":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"d":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}},"o":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}},"l":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.02262443438914027}}}}}}}},"o":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163}}}}}}},"n":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163}}}}}}}}}},"w":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}},"п":{"docs":{},"о":{"docs":{},"р":{"docs":{},"о":{"docs":{},"ж":{"docs":{},"н":{"docs":{},"і":{"docs":{},"й":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.03056768558951965}}}}}}}},"2":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}}}}}}},"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.03056768558951965}}}}}}}},"4":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.03056768558951965}}}}}}}},"docs":{},"_":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"2":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"4":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}},"docs":{}}}},"д":{"docs":{},"в":{"docs":{},"а":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}}}}},"у":{"docs":{},"у":{"docs":{},"р":{"docs":{},"р":{"docs":{},"а":{"docs":{},"а":{"docs":{},"!":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"в":{"docs":{},"е":{"docs":{},"с":{"docs":{},"е":{"docs":{},"л":{"docs":{},"и":{"docs":{},"й":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}}}}}}}}}},"с":{"docs":{},"в":{"docs":{},"а":{"docs":{},"р":{"docs":{},"л":{"docs":{},"и":{"docs":{},"в":{"docs":{},"и":{"docs":{},"й":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},"u":{"docs":{},"k":{"docs":{},"i":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"z":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.0028011204481792717}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.05194805194805195}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"chapters/00-Introduction.html":{"ref":"chapters/00-Introduction.html","tf":0.011627906976744186}}}}},"a":{"1":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}},"[":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"3":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}},"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"e":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}},"o":{"docs":{},"r":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}},"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.022408963585434174},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.028846153846153848},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.016666666666666666}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232}}}}}},"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.008333333333333333},"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"docs":{}}}}}}}},"a":{"docs":{},"y":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.05054151624548736}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/02-Classes-and-Objects.html":{"ref":"chapters/02-Classes-and-Objects.html","tf":0.025210084033613446},"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.019230769230769232},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"chapters/03-Class-Hierarchies.html":{"ref":"chapters/03-Class-Hierarchies.html","tf":0.009615384615384616},"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}},"r":{"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163}},"[":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"2":{"docs":{},",":{"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}},"4":{"docs":{},".":{"docs":{},".":{"6":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}}},"docs":{}}},"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.027149321266968326}},"[":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},",":{"5":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}},"docs":{}},".":{"docs":{},".":{"4":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}}},"1":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"3":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"a":{"docs":{},"y":{"0":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"2":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}},"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.013574660633484163},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}},"(":{"2":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}}}}}},"docs":{}}}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.020833333333333332}},"(":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.05}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},":":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.041666666666666664}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"chapters/04-Accessors-Attributes-Class-Variables.html":{"ref":"chapters/04-Accessors-Attributes-Class-Variables.html","tf":0.004166666666666667}}}}}}}}},",":{"docs":{},"b":{"docs":{},",":{"docs":{},"c":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.007874015748031496}},",":{"docs":{},"d":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.00904977375565611}}}}}}}},"[":{"0":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"1":{"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055}}},"docs":{}},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}}}}}},"=":{"docs":{},"[":{"1":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}},"docs":{}}},"m":{"docs":{},"p":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.008733624454148471}},";":{"docs":{},"&":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}},"u":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.02888086642599278}},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.0036101083032490976}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.03937007874015748}},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.003937007874015748}}}}}}}}},"p":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{"chapters/01-Strings-and-Methods.html":{"ref":"chapters/01-Strings-and-Methods.html","tf":0.00392156862745098}}}}}}}}}}}}}},"x":{"1":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{"chapters/05-Arrays.html":{"ref":"chapters/05-Arrays.html","tf":0.004524886877828055},"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236},"chapters/07-Loops-and-Iterators.html":{"ref":"chapters/07-Loops-and-Iterators.html","tf":0.023622047244094488},"chapters/08-Conditional-Statements.html":{"ref":"chapters/08-Conditional-Statements.html","tf":0.01444043321299639}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"m":{"docs":{},"i":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}}}}},"docs":{}},"docs":{}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.004366812227074236}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"chapters/09-Modules-and-Mixins.html":{"ref":"chapters/09-Modules-and-Mixins.html","tf":0.04216867469879518}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"chapters/06-Hashes.html":{"ref":"chapters/06-Hashes.html","tf":0.013100436681222707}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.012987012987012988}}}}},"r":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{"chapters/10-Saving-Files-Moving-On.html":{"ref":"chapters/10-Saving-Files-Moving-On.html","tf":0.03896103896103896}}}}}}}},"length":892},"corpusTokens":["0","0.0","0.175","0691","1","1+2","1,2,3","1,2,3,4","1,2,3],[3,4,5],[6,7,8]].each","1..10","1..10).each","1..3","10","10&quot","100","100&#39","100.00","1000","123","13,14,15,16","145.5","17.5","1995","1helloworld.rb","1st","2","2006","2008","23","3","3.0","39","39;#{i}&#39","39;,&#39;w&#39","39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39","39;a","39;a&#39","39;a&#39;,&#39;l&#39;,&#39;d&#39;,&#39;o&#39","39;b&#39","39;c&#39","39;diamond","39;enter","39;gold","39;h&#39","39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39","39;key1&#39;=&gt;&#39;val1&#39","39;key2&#39;=&gt;&#39;val2&#39","39;key3&#39;=&gt;&#39;val3&#39","39;key3&#39;=&gt;&#39;value_3&#39","39;key4&#39;=&gt;&#39;val4&#39","39;key_two&#39;=&gt;&#39;val2&#39","39;l&#39","39;loc1&#39","39;loc2&#39","39;miaow&#39","39;mon&#39","39;monday&#39","39;o&#39;,&#39","39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39","39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39;],[1,2,3,4","39;q&#39","39;room1&#39","39;room2&#39","39;rubi","39;sapphir","39;silver","39;some","39;the","39;then&#39","39;treasure1&#39","39;two&#39","39;w&#39","39;woof!&#39","39;woof&#39","39;будень&#39","39;вихідний&#39","39;два&#39","39;наділя&#39","39;неділя&#39","39;один&#39","39;свято&#39","39;субота&#39","39;три&#39","39;три&#39;].each","3].each","3}&quot","4","4,4","4,5,6","4.0","4149","4378","4446","5","5,5","5,6,7,8","5069","5168","5501","5]].each","6","6..7","7","7554","8","800","87","9","9,10,11,12","a,b,c","a,b,c,d","a.flatten","a1","a1[0","a1[3","a=[1","a[0","a[1","a_firstnam","a_name}&quot","a_secondnam","a_secondname}&quot","access","accessors.rb","accessors2.rb","aday","adescript","adventure1.rb","adventure2.rb","amp","amp;&amp","anam","and_or.rb","around","arr","arr.length","arr2","arr2[0","arr2[2,2","arr2[4..6","arr[0","arr[0,5","arr[0..4","arr[1","arr[3","array","array.new","array.new(2","array.new(2,&#39;hello&#39","array.new(2,&#39;world&#39","array.new(2,&quot;hello","array0.rb","array1.rb","array2.rb","array_assign.rb","array_index.rb","array_length(a0","array_new.rb","attr_accessor","attr_accessor(:valu","attr_read","attr_reader(:nam","attr_writ","attr_writer(:descript","attr_writer(:nam","attribut","au","avalu","b","b=#{b","badmood","begin","bit","block_syntax.rb","book","brace","break","build","c","c=#{c","c=[1","capit","case","case(i","case.rb","case2.rb","cat","cc","cd","cd_arr","chomp","class","cmd","collingbourn","compar","copyright","coq","ctrl","ctrl+f5","curli","c}&quot","d=#{d}\\n&quot","dark","daytyp","deadli","debug","debugg","def","default","descript","description&quot","description=&quot;an","description=(adescript","description}\\n&quot","dir","dir.entries(&#39;c:\\\\&#39","div_array.rb","do..end","dog","dog.new","dogs_and_cats.rb","each","each_loop.rb","easi","edges&quot","elsif","elvish","end","enter","entri","enumer","epub","ex","execut","exist","exit","f","f.write($cd_arr.to_yaml","f5","fade","fals","file","file.exist?($fn","file.open($fn","file.read($fn","filetest","fixnum","flatten","follow","for..end","for_each.rb","for_loop.rb","for_to.rb","forest","forg","fred","gc","get","get_descript","get_nam","gets().chomp","giba","glade&#39","glitteri","gold","gold&quot","goodmood","grand","great","greet","gt","guess","h1","h1.default","h2","h2.key","h2.keys).flatten.revers","h2.valu","h2[&#39;treasure1&#39","h2[&#39;treasure2&#39","h2[&#39;treasure3&#39","h2[&#39;treasure4&#39","h2[x1","hash","hash.new","hash.new(&quot;som","hash1.rb","hash2.rb","hello","helloname.rb","helloworld.rb","hours_asleep","hous","http://www.sapphiresteel.com","http://www.sapphiresteel.com/rubi","huw","id","if..elsif","if..then","if..then..els","if_else.rb","if_else_alt.rb","if_elsif.rb","if_then.rb","if_unless_mod.rb","ii","includ","inherit","initi","initia","initialize(anam","input","input.to_i","input_data","inspect","instanc","insurance_cost","invest","ironrubi","it’","java","jrubi","kernel","key","kind","lambda","lambdabook","lang.org","littl","littlebookofruby.sln","loaddb","love","lt","lt;&lt","lt;program","lt;treasure:0x28962f8","lt;вираз&gt","lt;умова&gt","ltd","magic","main","mainob.rb","manag","map","map.new([room1,room2,room3","math","matsumoto","matz","method.rb","microsoft","microsystem","mix","mixin","mobi","mod_vars.rb","modifi","modul","modules1.rb","modules2.rb","modules3.rb","modules4.rb","mountain","multi_array.rb","multiarr","myclass","myclass.new","mydog","mydog.get_nam","mydog.set_name(&#39;fido&#39","mydog.talk","mymap","mymodul","mymodule.greet","mynam","mysteri","myvar","name","name&gt","name.capit","name:&#39","name=&quot;sword&quot;&gt","name=(anam","namespac","name}&quot","nc","nd","neon","net","never","new","nil","nil,nil","num_th","o","ob","ob.class","ob.sayhi","ob.sayhiagain","ob.saysometh","object","object.rb","object_class.rb","objectspac","owner","oзвo","p","p((h1.key","p(a","p(anobject","p(b","p(c","p(h1.default","p(h1.key","p(h1.valu","p(h1[&#39;unknown_room&#39","p(h2[&#39;unknown_treasure&#39","p.rb","pascal","pdf","perl","permiss","pi","place&#39","power","power&quot","precis","price","print","print(&quot","print(&quot;100.to_","print(&quot;a=#{a","print(&quot;class.to_","print(&quot;object.to_","print(&quot;string.to_","print(&quot;t.inspect","print(&quot;t.to_","print(&quot;treasure.to_","process","program","programming/th","project","properti","put","puts(","puts(&#39;ok&#39","puts(&#39;x","puts(&#39;храп....&#39","puts(&quot","puts(&quot;#{a","puts(&quot;hello","puts(&quot;hello&quot","puts(&quot;somevar","puts(&quot;z&quot","puts(&quot;бувай&quot","puts(&quot;вівторок&quot","puts(&quot;неділя!&quot","puts(&quot;понеділок&quot","puts(&quot;п’ятниця&quot","puts(&quot;середа&quot","puts(&quot;субота!&quot","puts(&quot;четвер&quot","puts(100.to_","puts(arr[0","puts(arr[1","puts(arr[2","puts(arr[3","puts(arr[i","puts(class.to_","puts(greet","puts(h1[&#39;room2&#39","puts(i","puts(i.inspect","puts(mymodule.greet","puts(mymodule::goodmood","puts(ob.greet","puts(object.to_","puts(require(&quot;testmod.rb&quot","puts(string.to_","puts(t.descript","puts(t.inspect","puts(t.to_","puts(t1.descript","puts(t1.get_descript","puts(treasure.to_","puts(x","python","quot","quot;\\n&quot","quot;\\n\\t#{(1","quot;\\t&quot","quot;a","quot;a&quot","quot;an","quot;b&quot","quot;c&quot","quot;c:/mydir&quot","quot;d&quot","quot;do&quot","quot;e&quot","quot;ent","quot;four&quot","quot;gold","quot;h&quot","quot;hello","quot;hello&quot","quot;inspect","quot;key1&quot","quot;key2&quot","quot;key3&quot","quot;key4&quot","quot;key_two&quot","quot;l&quot","quot;o&quot","quot;one&quot","quot;rubi","quot;s&quot","quot;sapphir","quot;som","quot;tax","quot;th","quot;thi","quot;three&quot","quot;treasure1&quot","quot;treasure2&quot","quot;treasure3&quot","quot;two&quot","quot;val1&quot","quot;val2&quot","quot;val3&quot","quot;val4&quot","quot;w&quot","quot;веселий&quot","quot;два&quot","quot;порожній&quot","quot;сварливий&quot","quot;уурраа!&quot","rail","rang","receiv","requir","require(&quot;testmod.rb&quot","requiremodule.rb","reserv","return","return_name(a_firstnam","right","ring","ring&#39","ring&quot","room","room&#39","room&quot","rubi","ruby.html","s","s.to_f","sampl","sapphir","sapphiresteel","savedb","sayhi","sayhiagain","saysomet","saysometh","serhiy","set","set_descript","set_nam","set_name(anam","shownam","showname(a_nam","showname}&quot","showstr","signal","sleep","smalltalk","snore","softwar","someotherdog","somevar}&quot","sqrt","steel","stream&#39","string","string_eval.rb","studio","subtot","subtotal+tax}&quot","sun","super","super(anam","sword","symbol","t","t.descript","t1","t1.descript","t1.inspect","t1.inspect}&quot","t1.set_description(&quot;som","t1.to_","t1.valu","t2","t2.inspect}&quot","t2.to_","talk","tax","tax_calculator.rb","taxrat","thing","thing&quot","thing.initi","thing.new","thing1","thing1.get_nam","thing1.set_name(&quot;a","think","throne","tire","to_","to_f","to_s.rb","tomahto","tomayto","total","translat","treasur","treasure#initi","treasure.initi","treasure.new(&quot;ring&quot","treasure.new(&quot;sword&quot","treasure.rb","treasure1","treasure2","true","unless","unless.rb","until","until.rb","upcas","uppercase.rb","valu","variabl","vb","vin","visual","w","w(thi","weapon","weapon&quot","while.rb","while2.rb","window","working_overtim","world","world&quot","world&quot;,&quot;hello","world&quot;.to_f","world&quot;.upcas","worn","wrdsld","writeln(i","www.rubi","www.sapphiresteel.com","x","x.new(&#39;mi","x1","xobject&#39","y","yaml","yaml::load(input_data","yourdog","yourdog.set_name(&#39;bonzo&#39","yukihiro","zip"],"pipeline":["trimmer","stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Маленька книжка про Ruby","body":"Маленька книга про Ruby\n\n\n\n\n\n\n\n\nПерекладенo з дoзвoлу Хува Колінґбурна.Translated with permission from Huw Collingbourne.\n\nЦя книга є маленьким покроковим посібником для ознайомлення з мовою програмування Ruby.\nПро книгу\nКнига «The Little Book of Ruby» написана Хувом Колінґбурном (Huw Collingbourne) у співпраці з компанією «SapphireSteel Software», яка розробляє Ruby In Steel IDE для Visual Studio. Оригінал книги написаний англійською мовою та має 2 редакції:\n\nЧервень 2006\nБерезень 2008\n\nЦей переклад - це переклад другої редакції книги.\nДе читати\nПереклад доступний для завантаження у форматах PDF, ePub та Mobi. Онлайн-версія перекладу доступна для читання безкоштовно та містить найсвіжіші зміни. Розділи можуть бути незакінченими, проте переклад має бути правильним. Він оновлюється кілька разів на місяць.\nПочатковий англомовний варіант книги ви можете завантажити у форматі PDF.\nДрукована версія\nНа жаль, друковану версію перекладу придбати неможливо, через відсутність видавця. Якщо ви хочете стати нашим видавцем або маєте будь-які ідеї щодо друку перекладу, напишіть нам.\nПідтримка перекладу\nЯкщо Вам сподобався цей переклад і ви хочете допомогти нам, перш за все, ми дякуємо Вам! Є декілька способів посприяти нам:\nНаписати нам\nЯкщо Ви помітили яку-небудь помилку, повідомте нас, або виправте та надішліть пул–реквест.\nНе соромтесь надсилати запитання та побажання, які стосуються перекладу книги. Ми обов’язково візьмемо до уваги конструктивну критику з вашого боку.\nПідтримати матеріально\nВи також можете надіслати кошти в підтримку проекту на картки:\n\n4149 4378 5069 5501 — Lambda Books\n5168 7554 0691 4446 — Сергій Гіба\n\nПерекласти розділ\nВи можете обрати один з досі неперекладених розділів і спробувати перекласти його. Не забудьте повідомити про це у відповідній іш’ю, щоб ми могли закріпити за вами переклад цього розділу!\nЯк тільки ви завершите переклад, надішліть нам пул реквест, з посиланням на відповідну іш’ю.\nКоманда перекладачів\nЦей переклад результат наполегливої та злагодженої роботи нашої команди:\n\nСергій Гіба — автор перекладу.\nДопомога з перекладом — @wrdsld\nМаріанна Чуприна — коректор.\nОлександр Закритий — коректор.\n\nЛіцензія\nПереклад:\nCC BY-NC-ND 4.0 © Serhiy Giba and LambdaBooks\nОригінальний текст:\nCopyright © 2008 Dark Neon Ltd. All rights reserved.\n\n\n"},"chapters/00-Introduction.html":{"url":"chapters/00-Introduction.html","title":"Вступ","body":"Ласкаво просимо у «Маленьку книгу про Ruby»\nОзнайомтесь з Ruby за десять глав\n\nГлава 1: Рядки та методи\nГлава 2: Класи та об’єкти\nГлава 3: Класова ієрархія\nГлава 4: Аксесори, атрибути, змінні класів\nГлава 5: Масиви\nГлава 6: Хеші\nГлава 7: Цикли та ітератори\nГлава 8: Умовні оператори\nГлава 9: Модулі та домішки\nГлава 10: Збереження файлів, продовження\n\nЩо таке Ruby?\nRuby — це крос–платформна інтерпретована мова, яка має багато спільного з іншими “скриптовими” мовами, як от Perl чи Python. Однак, її версія об’єктної орієнтованості є більш ретельною і, у багатьох відношення, має багато спільного з великим прародичем “чистих” ООП мов, зокрема, мовою Smalltalk. Ruby була створена Юкіхіро Мацумото (Yukihiro Matsumoto) (відомого під псевдонімом Метц (Matz)) і вперше опублікована у 1995–у.\nЩо таке Rails?\nСьогодні розмови про Ruby здебільшого стосуються фреймворку під назвою Rails, відомого як Ruby On Rails. Хоча Rails є фреймворком із широкими можливостями, проте Ruby не заснований лише на ньому. Без сумніву, якщо ви вирішите відразу заглибитись у розробку на Rails без достатнього володіння Ruby, ви можете зрештою опинитись у ситуації, коли не розумієте свого додатку. «Маленька книга по Ruby» не охоплює спеціальні можливості Rails, проте вона дасть вам необхідне підґрунтя для розуміння та коду на Rails та написання ваших власних Rails–додатків.\nВстановлення та використання Ruby разом з Ruby In Steel\nRuby In Steel — це IDE для платформи Windows, яка постачається з єдиним інсталятором, який встановлює Ruby, Visual Studio, Ruby In Steel та інші додаткові пакети, включаючи Rails. Переконайтесь, що ви прочитали керівництво з встановлення цього програмного забезпечення: http://www.sapphiresteel.com.\nВстановлюємо Ruby самостійно\nЯкщо ви використовуєте якесь інше IDE або текстовий редактор, вам потрібно завантажити найсвіжішу версію Ruby з сайту www.ruby-lang.org. Переконайтесь, що ви завантажуєте виконувані файли (а не лише вихідний код).\nОтримати вихідний код програм–прикладів\nВсі програми з кожної глави цієї книги доступні для завантаження у вигляді zip–архіву з: http://www.sapphiresteel.com/ruby-programming/The-Little-Book-Of-Ruby.html. Після розархівування ви побачите, що всі програми згруповано по директоріях: по одній для кожної глави. Якщо ви користуєтесь Ruby In Steel, ви можете завантажити усі програми як одне рішення, з програмами для кожної з глав на гілках дерева у вікні «Project Manager».\nЗапуск програм на Ruby\nЗазвичай, корисно мати відкрите вікно командного рядка у директорії, що містить вихідні файли програм на Ruby. Якщо інтерпретатор Ruby було правильно встановлено у вашій системі, ви зможете запускати програми, запустивши команду ruby &lt;program name&gt; ось так:\nruby 1helloworld.rb\n\nЯкщо ви користуєтесь Ruby In Steel, ви зможете запустити програми у інтерактивній консолі, натиснувши CTRL+F5 або (у деяких версіях) — у налагоджувачі (debugger), натиснувши F5.\nЯк користуватись цією книгою\nЦя книга є покроковим посібником з програмування на Ruby, за яким ви можете слідувати від глави до глави, читаючи текст та запускаючи приклади програм. З іншого боку, якщо ви надаєте перевагу “поглибленню” в матеріал, то ви можете спробувати розібратись з програмами самостійно, а потім повернутись до пояснень у тексті. У цій книзі немає монолітних додатків, а лише маленькі, самодоповнені приклади програм. Це означає, що ви легко зможете пропустити главу, якщо захочете…\nУмовні позначення\nУ «Маленькій книжці про Ruby», всі приклади вихідного коду на Ruby написані ось так:\ndef saysomething\n  puts( &quot;Hello&quot; )\nend\n\nЯкщо для цього коду є відповідна програма–приклад, ім’я програми буде написано поруч та виділено жирним моноширним текстом ось так:\nhelloname.rb\nРоз’яснення та коментарі (які зазвичай надають поради або більш глибоке пояснення деяких нюансів, згаданих у тексті) виділені ось так:\n\nЦе додаткове роз’яснення. Ви можете пропустити його, якщо хочете, проте ви можете пропустити щось цікаве…!\n\n"},"chapters/01-Strings-and-Methods.html":{"url":"chapters/01-Strings-and-Methods.html","title":"Глава 1: Рядки та методи","body":"Глава перша\n\nУ якій ми пограємось з рядками, додамо кілька чисел, розберемось з методами та перевіримо кілька умов…\n\nЯкщо ви читаєте цю книгу, то, мабуть, маєте бажання програмувати мовою Ruby, і якщо ви схожі на мене — вам вже хочеться прочитати її. Що ж, не будемо витрачати час дарма. Я припускаю, що у вас вже є встановлена мова Ruby, якщо ж ні - встановіть її і поверніться сюди.\n\nВажливо: Якщо ви користуєтесь Ruby In Steel, впевніться, що ви завантажили рішення LittleBookOfRuby.sln for easy access to all the sample programs.\n\nТепер, починаємо програмувати. Відкрийте ваш текстовий редактор, створіть файл та запишіть в нього наступне:\nhelloworld.rb:\nputs &quot;hello world&quot;\n\nТепер запустіть вашу програму (у Ruby In Steel натисніть CTRL-F5). Якщо все правильно, Ruby має показати «hello world»:\n\nЯкщо ви користуєтесь текстовим редактором, який не має інтерактивної консолі, ви маєте запустити програму з допомогою командного рядка. Щоб зробити це, відкрийте вікно командного рядка (введіть CMD у меню «Пуск» на Windows) та перейдіть у директорію, що містить вихідний код, а тоді введіть ruby та назву програми, ось так:\n$ ruby helloworld.rb\n\n\nЦе напевно має бути найкоротша “hello world”–програма в історії програмування, тому ми одразу переходимо до отримання інформації від користувача…\nОчевидний наступний крок — ми повинні “отримати” рядок. Ви могли вже здогадатися, що в Ruby такий метод називається .gets.\n\nОб&#39;єкти і методи\nRuby — повністю об&#39;єктно орієнтована мова програмування. Все: від цифри до рядка — вважається об&#39;єктом. Кожен об&#39;єкт має вбудовані методи, які можуть бути застосовані для виконання якихось операцій. Для того, щоб застосувати метод, ви повинні поставити крапку після об&#39;єкта і написати ім&#39;я методу. Наприклад, тут я використаю метод .upcase  щоб вивести рядок “hello world” у верхньому регістрі:\nuppercase.rb:\nputs &quot;hello world&quot;.upcase\n\nДеякі методи, такі як puts і .gets  доступні скрізь, і не потребують зв&#39;язку з конкретним методом. Якщо говорити технічною мовою — ці методи забезпечуються модулем ядра Ruby і вони включені до кожного об&#39;єкта цієї мови. Коли ви запускаєте додаток на Ruby — автоматично створюється головний об&#39;єкт, який надає доступ до методів Ядра.\n\nПрограма helloname.rb повинна запитати в користувача його ім&#39;я. Припустимо, що це “Fred” — тоді на моніторі повинно з&#39;явитися привітання: “Hello Fred”. Ось її код:\nhelloname.rb:\nprint &#39;Enter your name:&#39;\nname = gets\nputs &quot;Hello #{name}&quot;\n\nЦе все виглядає дуже просто, але водночас потрібно детальніше розглянути деякі нюанси. По–перше, зверніть увагу, що я використав print, а не puts для запиту на введення імені, оскільки puts в кінці рядка ставить символ переносу на новий рядок, на відміну від print, який такого не робить. В цьому випадку я хочу, щоб курсор залишався в тому ж рядку що і запит вводу тексту.\nВ наступному рядку я використовую gets() для зчитування введеної користувачем інформації, яке відбувається після натиснення клавіші Enter. Цей рядок призначений змінній name. Я попередньо не визначав цієї змінної і до того ж не вказав її тип. В Ruby ви можете створювати змінні, коли захочете, і вона сама визначить їхній тип. Тут я присвоїв змінній name рядок і Ruby сама визначила, що тип змінної повинен бути string.\n\nЗауважте: Ruby чутлива до регістру. Тобто змінна myvar і myVar – дві різні змінні. Змінні, такі як name  у нашому прикладі – повинні починатися з малої літери.\n\nМіж іншим, дужки після gets() не обов’язкові, як і дужки, що охоплюють рядки після print та puts: код запуститься так само, якщо ви видалите дужки. Вони допомагають уникати двозначності в коді і, в деяких випадках, інтерпритатор попередить вас, якщо ви їх пропустите. Деякі Ruby–розробники полюбляють пропускати дужки щоразу, коли це можливо — я не поділяю їхньої думки. Тому в цій книзі ви будете бачити приклади коду саме з дужками.\nРядки та інтерполяція\nОстанній рядок файлу helloname.rb досить цікавий:\nputs(&quot;Hello #{name}&quot;)\n\nТут змінна name вбудовує себе в рядок. Це відбувається шляхом розміщення змінної між двома фігурними дужками, перед якими стоїть символ решітки #{}. Такий тип “підстановки” працює тільки в рядках з подвійними лапками.\nВ подвійних лапках ви можете не тільки вбудовувати змінні, а також маєте можливість вставити такі невидимі символи нового рядка &quot;\\n&quot; та табів &quot;\\t&quot;.\nВи навіть можете вставляти програмний код або математичні вирази. Уявімо, що у вас є метод showname який повертає рядок “Fred”. Наступний рядок буде містити інтерполяцію і викличе метод showname і, в результаті, буде відображатися рядок “Hello Fred”:\nstring_eval.rb:\nputs &quot;Hello #{showname}&quot;\n\nУважно подивіться і подумайте, що може вивести наступний рядок:\nputs &quot;\\n\\t#{(1 + 2) * 3}&quot;\n\nЗапустіть файл string_eval.rb і перевірте, чи мали ви рацію.\n\nКоментарі\nРядки, що починаються з символу решітки вважаються інтерпретатором Ruby як коментарі (тобто інтерпретатор просто їх ігнорує):\n# Це коментар\n\n\nМетоди\nУ попередньому прикладі я коротко презентував метод Ruby без жодних його пояснень та деталей синтаксису, яких вимагає цей метод. Зараз я виправлю свою помилку.\nМи називаємо це методом через те, що він забезпечує шлях (метод) для доступу до об&#39;єкта. В термінології ООП, ви відправляєте повідомлення до об&#39;єкта з проханням зробити щось. Уявімо, що у вас є об&#39;єкт з іменем ob який має метод saysomething. Ось так ви б вивели повідомлення методу saysomething:\nobject.rb:\nob.saysomething\n\nПрипустимо, що метод saysomething виглядає наступним чином:\ndef saysometing\n    puts(&quot;hello&quot;)\nend\n\nРезультатом є те, що коли ви надішлете до ob повідомлення saysomething, він відповість методом saysomething та виведе “hello”.\nГаразд, ось це і є опис цих речей у стилі “чистого ООП”. У “не зовсім чистому” ООП це можна пояснити так: saysomething є чимось на зразок функції, яка зв’язана з об’єктом і може бути викликана з допомогою крапкового запису: ob.saysomething.\nmethod.rb:\nУ Ruby, метод описується з допомогою ключового слова def, після якого слідує назва метода, яка має починатись з маленької літери, ось так:\ndef showstring\n    puts( &quot;Hello&quot; )\nend\n\nПісля назви методу, ви можете передати один або декілька аргументів, розділивши їх комою:\ndef showname(a_name)\n    puts(&quot;Hello #{a_name}&quot;)\nend\n\ndef return_name(a_firstName, a_secondName)\n    return &quot;Hello #{a_firstName} #{a_secondName}&quot;\nend\n\nЯк і сказано раніше, для зрозумілості, я писатиму у своєму коді дужки, проте ви можете упускати їх, якщо бажаєте.\nmainob.rb:\n\nЯкщо методи належать якимось об&#39;єктам, як в попередньому прикладі з ob, тоді якому об&#39;єкту належать методи, які вільно стоять в коді? Як я вже казав раніше, Ruby автоматично створює об&#39;єкт з ім&#39;ям main, коли ви запускаєте програму і саме цьому об&#39;єкту належать методи, які вільно лежать в коді і не належать жодному об&#39;єкту у коді вашої програми.\n\nЧисла\nЧисла настільки ж легко використовувати, як і рядки. Припустимо, ви хочете підрахувати ціну продажу, тобто загальну суму з врахування податків чи зробити загальний підсумок.\nЩоб визначити ціну продажу (subtotal) необхідно помножити вартість продукту на встановлені податкові норми (taxrate) та додати до отриманого додаткову вартість (витрати). Припустимо, що ціна продажу складає $100, а податок складає 17.5%, цей код порахує і виведе результат:\nsubtotal = 100.00\ntaxrate = 0.175\ntax = subtotal * taxrate\nputs &quot;Tax on $#{subtotal} is $#{tax}, so grand total is $#{subtotal+tax}&quot;\n\nЗвісно, краще буде виконувати розрахунки на різних видах цін продажу, ніж на підрахунку одного і того ж самого виду знову і знову. Ось найпростіша версія розрахунку податків, яка нагадує користувачеві зазначити ціну продажу:\ntaxrate = 0.175\nprint &quot;Enter price (ex tax): &quot;\ns = gets\nsubtotal = s.to_f\ntax = subtotal * taxrate\nputs &quot;Tax on $#{subtotal} is $#{tax}, so grand total is $#{subtotal+tax}&quot;\n\nТут .to_f — це метод класу String. Він перетворює рядок в число з плаваючою комою. Для прикладу, рядок &quot;s&quot; перетвориться в число 145.5. Якщо рядок не може бути перетворений у число плаваючою комою  - інтерпретатор поверне нам об&#39;єкт 0.0. Наприклад, &quot;Hello world&quot;.to_f поверне в якості результату 0.0\nПеревірка умови: if ... then\nПроблема з простим обчислювачем податку, код якого наведено вище, у тому, що він може приймати від’ємні проміжні суми та видавати від’ємне значення податку — ситуація, яка наврядчи буде вигідна для уряду! Тому мені потрібно перевіряти наявність мінуса у чисел, і, якщо він присутній, встановлювати їм нульове значення. Ось оновлена версія мого коду:\ntax_calculator.rb:\ntaxrate = 0.175\nprint &quot;Enter price (ex tax): &quot;\ns = gets\nsubtotal = s.to_f\nif (subtotal &lt; 0.0) then\n    subtotal = 0.0\nend\ntax = subtotal * taxrate\nputs &quot;Tax on $#{subtotal} is $#{tax}, so grand total is $#{subtotal+tax}&quot;\n\nВ Ruby умова if схожа на if–умови в інших мовах програмування. Однак, зауважте, що дужки є необов’язковими, так само, як і ключове слово then. Тим не менше, якщо б ви написали те саме без переходу на новий рядок після перевірки умови, тоді then має бути обов’язково.\nif (subtotal &lt; 0.0) then subtotal = 0.0 end\n\nЗауважте ключове слово end, яке вказує, що блок if є обов’язковим. Якщо ви забудете його, ваш код не запуститься.\n\nПримітка перекладача:\nЦю саму умови ви можете написати ось так:\nsubtotal = 0.0 if subtotal &lt; 0.0\n\n… або так:\nsubtotal = 0.0 unless (subtotal &gt; 0.0) || (subtotal == 0)\n\n\n"},"chapters/02-Classes-and-Objects.html":{"url":"chapters/02-Classes-and-Objects.html","title":"Глава 2: Класи та об’єкти","body":"Глава друга\n\nВизначення класів, створення об&#39;єктів та швидкий огляд їхньої роботи…\n\nДосі ми використовували “стандартні” об&#39;єкти Ruby, такі як цифри і рядки. Тепер розглянемо створення власних нових типів об&#39;єктів. Як і в більшості об’єктно орієнтованих мов програмування, в Ruby об&#39;єкт визначається класом. Клас подібний до креслення, з якого все будується. Це приклад дуже простого класу:\nclass MyClass\n\nend\n\nА тут я створюю об&#39;єкт нашого простого класу:\nobject = MyClass.new\n\nЯ небагато можу зробити з нашим об&#39;єктом хоча б тому, що нічого не запрограмував в класі MyClass, з якого він був створений.\nobject_class.rb:\n\nНасправді, якщо ви створите порожній клас як от MyClass, об&#39;єкти створені від нього — не будуть зовсім безкорисними. Усі класи в  Ruby автоматично успадковують функціональність від класу Object. Тож, наш об&#39;єкт ob може використовувати методи класу Object, наприклад такі, як .class  (виводить назву класу, якому належить наш клас):\nputs ob.class    #=&gt; виведе: “MyClass”\n\n\nЩоб зробити MyClass трохи кориснішим, потрібно додати в нього один або декілька методів. У цьому прикладі, що був коротко згаданий у попередній главі, я додав метод, який називається saysomething:\nclass MyClass\n  def saysomething\n    puts(&quot;Hello&quot;)\n  end\nend\n\nТепер, якщо я створю об&#39;єкт класу MyClass, я зможу викликати метод  saysomething цього об&#39;єкта і вивести слово &quot;Hello&quot;:\nob = MyClass.new\nob.saysomething\n\nЕкземпляри і змінні екземплярів класів\nСтворимо кілька корисних об&#39;єктів. Дім не повинен бути без собаки, тож давайте створимо клас Dog:\nclass Dog\n  def set_name(aName)\n    @myname = aName\n  end\nend\n\nЗверніть увагу, що визначення класу починається з ключового слова class (в нижньому регістрі). Після нього — назва класу, що повинна починатися з великої літери. Мій клас Dog містить один метод set_name. Він приймає вхідний аргумент aName. В тілі методу set_name значення aName присвоюється змінній екземпляра @myname.\n\nЗмінні, що починаються з символу @ є змінними екземпляра (instance variables). Це означає, що вони належать індивідуальним об&#39;єктам класу або “екземплярам” класу. Оголошувати змінні заздалегідь не обов’язково.\n\nЯ можу створити екземпляр класу Dog, тобто “об&#39;єкт собака”, викликавши метод new. Тут я створюю два об&#39;єкти класу Dog тобто “дві собаки” (пам&#39;ятайте, що імена класів починаються з великої літери, а імена об&#39;єктів складаються з літер нижнього регістру):\nmydog = Dog.new\nyourdog = Dog.new\n\nЗараз ці дві собаки не мають імен. Тож наступне, що я повинен зробити, щоб задати їм імена — це викликати метод set_name:\nmydog.set_name(&#39;Fido&#39;)\nyourdog.set_name(&#39;Bonzo&#39;)\n\nЗадавши імена собакам, мені потрібно мати спосіб дізнати їх пізніше. У кожної собаки повинно бути власне ім&#39;я, тому давайте створимо метод get_name:\ndef get_name\n  return @myname\nend\n\nСлово return тут необов&#39;язковим. В Ruby методи завжди повертають значення останнього обчисленого виразу. Але для більшої ясності (і для уникнення несподіваних результатів від методів складніших ніж цей) нам слід виробити звичку явно вказувати return, коли ми хочемо повернути якесь значення. Давайте задамо поведінку нашій собаці, наприклад, навчимо її відгукуватися. Нижче визначений завершений клас Dog:\ndogs_and_cats.rb:\nclass Dog   \n  def set_name(aName)\n    @myname = aName\n  end\n\n  def get_name\n    return @myname\n  end\n\n  def talk\n    return &#39;woof!&#39;\n  end\nend\n\nТепер ми можемо створити собаку, задати їй ім&#39;я, дізнатися її ім&#39;я і попросити відгукнутися:\nmydog = Dog.new\nmydog.set_name(&#39;Fido&#39;)\nputs mydog.get_name\nputs mydog.talk\n\nДля різноманітності та практики — можете створити файл dogs_and_cats.rb і задати в ньому поведінку не тільки собаці, а й коту, створивши відповідно новий клас Cat. Клас Cat відрізняється від класу Dog лише тим, що метод talk має повертати &#39;miaow&#39; замість &#39;woof&#39;.\n\nЦя програма містить помилку. Об’єкт someotherdog ніколи не матиме значення, яке присвоюється у його змінну @name. На щастя, Ruby не підведе нас, якщо ми спробуємо вивести ім’я цього собаки. Замість цього, вона виведе nil. Ми скоро поглянемо на простий спосіб, який допоможе уникнути подібних помилок у майбутньому.\n\nКонструктор - new і initialize\ntreasure.rb:\nЗараз розглянемо ще один приклад класу. Відкрийте файл treasure.rb. Ми створимо пригодницьку гру з двома класами: Thing і Treasure. Клас Thing дуже схожий на клас Dog з нашої попередньої програми (крім того, що він не вміє гавкати).\nОднак, у класу Treasure є кілька цікавих особливостей. По-перше, в нього немає таких методів як get_name і set_name. Замість цього, у ньому визначений метод initiaize, який приймає два аргументи, а їх значення присвоюються змінним екземпляра @name і @description:\ndef initialize(aName, aDescription)\n  @name = aName\n  @description = aDescription\nend\n\nЯкщо клас містить метод initialize, то він буде автоматично викликаний при створенні нового об&#39;єкта, методом new. Використовувати метод initialize для задання значень змінним екземпляра — хороша ідея. Вона має дві явні переваги у порівнянні з використанням методів накшталт set_name для встановлення значення кожній зі змінних екземпляру. По–перше, складний клас може містити велику кількість змінних екземпляру і ви можете встановити всім значення лише одним методом initialize, а не багатьма set–методами. По-друге, якщо змінним автоматично задається значення в момент створення об&#39;єкта — у вас не буде змінної екземпляру, якій ви забули встановити значення.\n\nЗауважте: Не рекомендується реалізовувати свою власну версію методу new.\n\nІ нарешті, я створив метод to_s щоб повернути об&#39;єкт класу Treasure у вигляді рядка. Назва to_s вибрана не просто так, така сама назва використовується і в стандартній ієрархії класів Ruby. Насправді, to_s метод визначається для самого класу Object, який є кінцевим предком всіх інших класів в Ruby. Перевизначаючи метод to_s, я додав нову поведінку, яка більше підходить класу Treasure, ніж метод за замовчуванням.\nІнспектування об&#39;єктів\nДо речі, зверніть увагу також, що я “заглянув в середину” Treasure об&#39;єкта t1, використовуючи метод inspect:\nt1.inspect\n\nМетод inspect визначений для всіх об&#39;єктів Ruby. Він повертає рядок, що містить зручний для читання опис об&#39;єкта. В даному випадку, він показує щось на зразок цього:\n#&lt;Treasure:0x28962f8 @description=&quot;an Elvish weapon forged of gold&quot;, @name=&quot;Sword&quot;&gt;\n\nПерше в цьому рядку це клас, якому належить об&#39;єкт класу Treasure. За ним йде число, яке у вас може відрізнятися від написаного вище - це внутрішній ідентифікатор в Ruby для даного конкретного об&#39;єкта. Останніми показані змінні нашого екземпляра та їх значення.\np.rb:\nclass Treasure\n  def initialize(aName, aDescription)\n    @name = aName\n    @description = aDescription\n  end\n\n  def to_s # Перевизначення стандартного методу to_s\n    &quot;The #{@name} Treasure is #{@description}\\n&quot;\n  end\nend\n\n\na = &quot;hello&quot;\nb = 123\nc = Treasure.new(&quot;ring&quot;, &quot;a glittery gold thing&quot;)\n\np(a)\np(b)\np(c)\n\nRuby надає метод p для перевірки і відображення об&#39;єктів.\np(anobject)\n\nto_s.rb:\n# Показуємо різні об&#39;єкти у вигляді рядка використовуючи метод `to_s`\n\nclass Treasure\n  def initialize(aName, aDescription)\n    @name = aName\n    @description  = aDescription\n  end\n  # Тут ми не перевизначатимемо метод `to_s`\n  # тому об&#39;єкти цього класу використовуватимуть стандартний метод `to_s`\nend\n\n\nt = Treasure.new(&quot;Sword&quot;, &quot;A lovely Elvish weapon&quot;)\nprint(&quot;Class.to_s: &quot;)\nputs(Class.to_s)\nprint(&quot;Object.to_s: &quot;)\nputs(Object.to_s)\nprint(&quot;String.to_s: &quot;)\nputs(String.to_s)\nprint(&quot;100.to_s: &quot;)\nputs(100.to_s)\nprint(&quot;Treasure.to_s: &quot;)\nputs(Treasure.to_s)\nprint(&quot;t.to_s: &quot;)\nputs(t.to_s)\nprint(&quot;t.inspect: &quot;)\nputs(t.inspect)\n\nЩоб побачити, як метод to_s може використовуватися різними об&#39;єктами і перевірити як екземпляр класу Treasure буде перетворений в рядок, якщо не перевизначати метод to_s, випробуйте програму to_s.rb.\nВи побачите, що, під час виклику методу to_s на таких класах, як Class, Object, String і Treasure, метод просто поверне їхні імена. А якщо ми його викличемо на об&#39;єкті, як наприклад t екземпляр класу Treasure то він поверне той же ідентифікатор, що повертає метод inspect.\ntreasure.rb:\nclass Thing\n  def set_name(aName)\n    @name = aName\n  end\n\n  def get_name\n    return @name\n  end\nend\n\nclass Treasure\n  def initialize(aName, aDescription)\n    @name = aName\n    @description = aDescription\n  end\n\n  def to_s # Перевизначення стандартного методу to_s\n    &quot;The #{@name} Treasure is #{@description}\\n&quot;\n  end\nend\n\nthing1 = Thing.new\nthing1.set_name(&quot;A lovely Thing&quot;)\nputs thing1.get_name\n\nt1 = Treasure.new(&quot;Sword&quot;, &quot;an Elvish weapon forged of gold&quot;)\nt2 = Treasure.new(&quot;Ring&quot;, &quot;a magic ring of great power&quot;)\nputs t1.to_s\nputs t2.to_s\n# Метод `inspect` дозволяє заглянути в середину об&#39;єкта\nputs &quot;Inspecting 1st treasure: #{t1.inspect}&quot;\n\nДивлячись на цей код, можна побачити, що місцями він повторюється. Зрештою, чому маючи клас Thing, який містить змінну @name і клас Treasure, який також містить цю саму змінну, кожна з них ініціалізуються окремо один від одного? Це здається логічним, якщо розглядати клас Treasure як тип Thing. Якби я хотів розвинути цю програму до справжньої пригодницької гри, інші об&#39;єкти, такі як “кімнати” і “зброя” були б іншим типом класу Think. Думаю, пора почати роботу над правильною побудовою ієрархії класів. Спробуємо це зробити у наступній главі.\n"},"chapters/03-Class-Hierarchies.html":{"url":"chapters/03-Class-Hierarchies.html","title":"Глава 3: Класова ієрархія","body":"Глава третя\n\nІєрархія класів…\n\nМи закінчили попередній урок на тому, що створили два нових класи: Thing та Treasure. Якщо не брати до уваги те, що обидва класи мають схожий функціонал (обидва мають властивість name), між ними немає ніякого зв’язку. Наразі ці два класи досить прості, тому таке незначне повторення не грає великої ролі. Проте, коли ви почнете писати реальні програми більшої складності, ваші класи міститимуть численні змінні та методи, вам точно набридне перезаписувати одні й ті ж речі знову і знову.\nСтворити клас спеціального типу, щоб інший клас просто наслідував його функціональність — цілком твереза ідея. У нашій простій пригодницькій грі, наприклад, Treasure є спеціальним типом, що належить до Thing, тому клас Treasure повинен наслідувати функціональність з класу Thing.\n\nІєрархія класів: предки та нащадки. У цій книзі ми часто говоримо про нащадків класів, які наслідують функціональність від своїх класів–предків. Ці поняття навмисне наштовхують на своєрідні сімейні зв’язки між спорідненими класами. В Ruby кожен клас має лише одного батька. Однак, класи  можуть бути спадкоємцями великих та багатих сімейних родів з багатьма поколіннями дідів, прадідів і так далі…\n\nПоведінка Things загалом може бути описана у самому ж класі Thing. Клас Treasure автоматично унаслідує всі можливості класу Thing, тому нам не потрібно перезаписувати все заново. Він же зможе згодом розшириити свої можливості, які стосуються лише Treasures.\nУ якості узагальненого правила, при створенні класової ієрархії, класи з найбільш узагальненою поведінкою є вище у ієрархії, ніж класи з більш специфічною поведінкою. Таким чином, клас Thing, який має лише ім’я (name) та опис (description), мав би бути предком класу Treasure, який має ім’я (name), опис (description), а ще, додатково, значення (value); клас Thing також може бути предком для іншого спеціалізованого класу, як от Room, який має ім’я (name), опис (description), а також може існувати (exits) — і так далі…\n\nОдин батько — багато дітей…\nДіаграма, зображена вище, демонструє клас Thing, який має ім’я та опис (у програмі написаній на Ruby, це може бути представлено у вигляді внутрішніх змінних, як от @name та @description, а також деякими методами, для доступу до них). Обидва класи Treasure та Room є нащадками Thing, тож вони автоматично унаслідують ім’я (name) та опис (description). Клас Treasure додає новий елемент: значення (value) – тож тепер він має ім’я, опис and значення; клас Room додає можливість існування (exits) – тож тепер має so it has ім’я, опис and існує.\nadventure1.rb:\nДавайте розглянемо, як створити унаслідуваний клас у Ruby. Відкрийте програму adventure1.rb. Вона починається з простого визначення класу Thing, який має дві змінні екземплярів: @name та @description. Цим змінним, при створенні нового об’єкту Thing, присвоюється значення у методі initialize. До змінних екземплярів зазвичай не можна (і не слід) звернутись безпосередньо із зовнішнього світу поза цим класом, у відповідності до принципу інкапсуляції\n\n«Інкапсуляція» — це термін, який пов’язаний з модульністю об’єкта. Простими словами, він означає, що лише сам об’єкт може займатись справами, які пов’язані з його внутрішнім станом. Все, що поза цим об’єктом — не може. Перевагою цього підходу є те, що програміст може змінювати імплементацію методів, не хвилюючись про те, що якийсь зовнішній код може покладатись на специфіку попередньої імплементації.\n\nДля того, щоб отримувати значення кожної змінної у об’єкті Thing, нам потрібно створити get–аксесор, як от get_name; щоб присвоювати нові значення, нам знадобиться set–аксесор, як отset_name:\ndef get_name\n  return @name\nend\n\ndef set_name(aName)\n  @name = aName\nend\n\nБатьківські (супер–) та дочірні (суб–) класи\nТепер подивіться на клас Treasure. Зверніть увагу на те, як він оголошений:\nclass Treasure &lt; Thing\n\nТрикутна дужка, &lt;, вказує на те, що Treasure є субкласом, або спадкоємцем, класу Thing і тому наслідує його дані (змінні) та поведінку (методи). Оскільки методи get_name, set_name, get_description та set_description вже існують в класі–предку (Thing), їх не потрібно переоголошувати у класі–нащадку (Treasure).\nКлас Treasure має додаткову частинку даних — його значення (@value), тому я маю написати відповідні get та set аксесори для нього. Коли створюється новий об’єкт Treasure, автоматично викликається його метод initialize. Об’єкт Treasure має ініціалізувати три змінні (@name, @description та @value), тому метод initialize приймає три аргументи:\ndef initialize(aName, aDescription, aValue)\n\nПерші два аргументи передаються у метод initialize батьківського класу (Thing) з допомогою ключового слова super, тож метод initialize класу Thing може працювати з ними:\nsuper(aName, aDescription)\n\nПри використанні всередині методу, ключове слово super викликає метод з таким самим іменем у батькіського (супер–) класу.\nПоточний метод у класі Treasure викликає initialize, тому коли код всередині цього методу передає ці два аргументи (aName, aDescription) до super, це насправді передає їх до методу initialize батьківського класу Thing.\nЯкщо ключове слово super використовується саме по собі, без жодного вказаного аргументу, всі аргументи, які були передані до поточного методу, передаються до успадкованого метода.\n"},"chapters/04-Accessors-Attributes-Class-Variables.html":{"url":"chapters/04-Accessors-Attributes-Class-Variables.html","title":"Глава 4: Аксесори, атрибути, змінні класів","body":"Глава четверта\n\nАксесори, атрибути та змінні класів…\n\nТепер, повертаючись до роботи над маленькою пригодницькою грою, яку я програмував раніше… Мені досі не подобається той факт, що в класах повно повторюваного коду для get та set аксесорів. Дайте мені подивитись, що я можу зробити, щоб виправити це.\nМетоди–аксесори\nЗамість того, щоб звертатись до значення змінної екземпляру @description двома різними методами, get_description та set_description, ось так…\nputs(t1.get_description)\nt1.set_description(&quot;Some description&quot;)\n\n…було б набагато краще отримувати та присвоювати їх так само, як ми звикли отримувати та присвоювати значення з та в звичайні змінні, тобто ось так:\nputs(t1.description)\nt1.description = &quot;Some description&quot;\n\nЩоб зробити це можливим, мені потрібно змінити визначення класу Treasure.\nДля цього потрібно переписати методи–аксесори для @description так, як показано нижче:\ndef description\n  return @description\nend\n\ndef description=(aDescription)\n  @description = aDescription\nend\n\naccessors.rb:\nУ програмі accessors.rb я додав аксесори подібно до того, як показано у прикладі вище. Є дві відмінності у порівнянні з моєю попередньою версією. По–перше, обидва аксесори називаються description, замість get_description та set_description; по–друге, після назви set–аксесора є знак рівності (=). Тепер можна присвоювати новий рядок ось так:\nt.description = &quot;a bit faded and worn around the edges&quot;\n\nАбо отримувати значення ось так:\nputs(t.description)\n\n\nЗауважте: Коли ви пишете set–аксесор таким чином, символ = має йти безпосередньо після ім’я методу, а не десь між ім’ям методу та його аргументами. Тому такий приклад є правильним:\n def name=(aName)\n\nА ось цей спричинить помилку:\ndef name =(aName)\n\n\nЧитачі та записувачі атрибутів\nНасправді є простіший та коротший спосіб отримати той же результат. Все, що вам потрібно зробити — це скористатись двома спеціальними методами: attr_reader та attr_writer — після яких повинен стояти символ:\nattr_reader :description\nattr_writer :description\n\nВам потрібно додати цей код всередині оголошення ваших класів, проте поза будь–якими методами, ось так:\nclass Thing\n  attr_reader :description\n  attr_writer :description\n\n  # решта методів…\nend\n\n\nСимволи: У Ruby символом є ім’я, перед яким стоїть двокрапка. Symbol визначений у бібліотеці класів Ruby, щоб відображати імена всередині інтерпретатора Ruby. Вони можуть використовуватись по–різному. Наприклад, коли ви передаєте один або більше символів у якості аргументів attr_reader (це може бути не достатньо очевидним, але attr_reader є, насправді, методом класу Module), \nRuby створює екземпляр змінної та get–аксесор, щоб повертати значення цієї змінної; обидва екземпляри змінної та метод–аксесор матимуть таке ж ім’я, як і вказаний символ.\n\nВиклик attr_reader з символом має такий же ефект, як і створення екземпляру змінної з ім’ям, що співпадає з символом та get–аксесором для цієї змінної.\nВиклик attr_writer так само створює екземпляр змінної з set–аксесором. У цьому випадку змінна буде називатись @description. Змінні екземпляру вважаються “атрибутами” об’єкту — ось чому методи attr_reader та\nattr_writer так називаються.\naccessors2.rb:\nПрограма accessors2.rb містить кілька робочих прикладів записувачів та читачів атрибутів у дії. Зауважте, що клас Thing визначає set–аксесор у скороченій формі (використовуючи attr_writer з символом) для змінної @name:\nattr_writer :name\n\nПроте він має розгорнуту форму для get–аксесора – написаний повністю вручну метод – для тієї ж змінної:\ndef name\n  return @name.capitalize\nend\n\nПеревагою повного написання методу, як у прикладі вище, є те, що це відкриває для вас можливість додатково обробляти значення атрибуту, замість того, щоб просто читати або записувати його. Тут get–аксесор використовує метод capitalize класу String, щоб повернути значення @name з першою літерою у верхньому регістрі.\nАтрибут @description не потребує додаткової обробки, тому я використовуватиму attr_reader та attr_writer, щоб встановлювати та отримувати значення змінної @description.\n\nАтрибути чи властивості? Не плутайтесь у термінології. У Ruby,\n“атрибут” (attributes) є еквівалентним до того, що у багатьох інших мовах програмування називається “властивістю” (property).\n\nЯкщо ви хочете і читати, і записувати змінну, метод attr_accessor надає коротшу альтернативу замість окремих attr_reader та attr_writer. Я використав його для доступу до атрибуту value у класі Treasure:\nattr_accessor :value\n\nЦе еквівалентне до:\nattr_reader :value\nattr_writer :value\n\nАтрибути створюють змінні\nРаніше я сказав, що виклик attr_reader з символом насправді створює змінну з тим самим ім’ям, що і у символі.\nМетод attr_accessor також робить це. У коді до класу Thing, така поведінка не зовсім очевидна оскільки клас має метод initialize явно створює змінні.\nОднак, клас Treasure не посилається до змінної @value у своєму методі initialize:\nclass Treasure &lt; Thing\n  attr_accessor :value\n  def initialize(aName, aDescription)\n    super(aName, aDescription)\n  end\nend\n\nЄдиною вказівкою на те, що змінна @value існує — є визначення аксесора, яке оголошує атрибут value:\nattr_accessor :value\n\nМій код у кінці вихідного файлу встановлює значення кожному об’єкті Treasure:\nt1.value = 800\n\nНавіть якщо вона ніде формально не оголошена, змінна @value справді існує і ми можемо отримати її числове значення з допомогою get–аксесора:\nt1.value\n\nЩоб бути точно впевненим у тому, що аксесор атрибуту справді створив @value, ви завжди можете подивитись всередину об’єкту з допомогою методу inspect. Я так і зробив, тому у останніми двома рядками коду у цій програмі є:\nputs &quot;This is treasure1: #{t1.inspect}&quot;\nputs &quot;This is treasure2: #{t2.inspect}&quot;\n\nАксесори атрибутів можуть ініціалізувати більше, ніж один атрибут за раз, якщо ви передасте їм список символів у вигляді аргументів розділених функціями, ось так:\nattr_reader :name, :description\nattr_writer(:name, :description)\nattr_accessor(:value, :id, :owner)\n\nЯк завжди, у Ruby дужки довкола аргументів є необов’язковими.\nadventure2.rb:\nТепер, давайте подивимось, як використати читачі та записувачі атрибутів у моїй пригодницькій грі. Завантажте програму adventure2.rb. Ви побачите, що я створив два атрибути класу Thing, які доступні на читання: name та description. Я також зробив description доступним на запис; однак, оскільки я не планую змінювати ім’я жодного об’єкту Thing, атрибут name є недоступним на запис:\nattr_reader(:name, :description)\nattr_writer(:description)\n\nЯ створив метод to_s, який повертає рядок, що описує об’єкт Treasure. Нагадаю, що всі класи в Ruby мають стандартний метод to_s. Метод to_s класу Thing перезаписує (а також замінює) метод за замовчуванням. Ви можете перезаписати методи, якщо ви хочете імплементувати нову поведінку для певного типу класів.\nВиклик методів батьківського класу\nЯ вирішив, що моя гра матиме два класи, що наслідуються від Thing. Клас Treasure додає атрибут value, який можна і читати, і записувати. Зауважте, що його метод initialize викликає батьківський клас для того, щоб ініціалізувати атрибути name та description перед ініціалізацією змінної @value:\nsuper(aName, aDescription)\n@value = aValue\n\nТут, якщо б я упустив виклик батьківського класу, атрибути name та description не ініціалізувалися б. Так сталося б тому, що Treasure.initialize перезаписує Thing.initialize, тому що коли об’єкт Treasure створюється, код у Thing.initialize не виконається автоматично.\n\nУ деяких книгах про Ruby, між іменами класу та методу може стояти символ решітки: Treasure#initialize. Це лише правило з документації (яке я ігнорую) і не є частиною синтаксису Ruby. !!! I guess it’s just a case of ‚You say tomayto and I\nsay tomahto; !! ви кажете Treasure#initialize, а я кажу Treasure.initialize.\nОсь так, давайте не сперечатись через це — це всього лише пунктуація…!\n\nЗ іншого боку, клас Room також наслідується від Thing і поки не має методу initialize, тому коли створюється новий об’єкт Room, Ruby проходить по класовій ієрархії у пошуках класу, який має такий метод. Першим методом initialize, який він знайде, буде метод, що належить Thing — так ініціалізуються name та description атрибути об’єкта Room.\nЗмінні класів\nЄ також декілька інших цікавих речей у цій програмі. Відразу на початку класу Thing ви можете побачити:\n@@num_things = 0\n\nДва символи @ на початку імені цієї змінної оголошують, що змінна @@num_things є змінною класу (class variable). Змінні, які ми використовували всередині класів, дотепер були змінними екземплярів, і починались з одного @, як от @name. Для них кожен новий об’єкт (або екземпляр) цього класу присвоював свої власні значення для своїх власних змінних екземпляру. На відміну від змінних екземплярів, всі об’єкти, що походять від певного класу, поділяють між собою одні й ті ж змінні класів.Я присвоїв 0 змінній @@num_things, щоб бути певним, що вона має правильне значення з самого початку.\nТут, змінна @@num_things має зберігати загальне число об’єктів Thing у грі. Ми робимо це простим інкрементуванням змінної класу (ми використовуємо +=, щоб додати до змінної 1) у методі initialize щоразу, коли створюється новий об’єкт, ми виконуємо:\n@@num_things +=1\n\nЯкщо ви подивитесь на мій код, ви побачите, що я створив клас Map, щоб зберігати масив кімнат (rooms). Він включає версію методу to_s, який виводить інформацію для кожної кімнати у масиві. Не турбуйтесь про імплементацію класу Map: ми розглянемо масиви та їхні методи дуже скоро.\n\nЦя діаграма показує клас Thing (прямокутний), який містить змінну класу @@num_things та змінну екземпляру @name. Три овали зображують Thing–об’єкти – тобто екземпляри класу Thing.  Коли один з цих об’єктів присвоює значення своїй змінній екземпляра @name, це значення впливає лише на змінну @name цього об’єкта – ось чому кожен об’єкт має різне значення @name. Проте, коли об’єкт присвоює значення змінній класу @@num_things це значення “живе всередині” самого класу Thing і розділяється між усіма екземплярами цього класу. На малюнку @@num_things рівне 3 і це справджується для всіх об’єктів Thing.\nЗнайдіть код наприкінці файлу та запустіть програму, щоб побачити, як ми створили та ініціалізувати всі три об’єкти та використали змінну класу @@num_things, щоб загальну кількість об’єктів Thing, які ми створили.\n"},"chapters/05-Arrays.html":{"url":"chapters/05-Arrays.html","title":"Глава 5: Масиви","body":"Глава п’ята\n\nМасиви…\n\nДо цього часу, ми, в цілому, використовували об&#39;єкти поодинці. В цій главі ми дізнаємось, як створити список об&#39;єктів. Розпочнемо із розгляду найбільш поширеного типу структури списку - масиву.\narray0.rb:\n\nВикористання масивів\nЩо таке масив?\nМасив є еквівалентом колекції елементів, в якій кожний елемент може бути пронумерованим.\nВ Ruby, (на відміну від інших мов) один масив може містити елементи з різними типами даних таких як рядки, цілі числа і числа з плаваючою точкою чи, навіть, виклик методу, який повертає деяке значення:\na1 = [1, &#39;two&#39;, 3.0, array_length(a0)]\n\nПерший елемент масиву має індекс 0 — це означає, що кінцевий елемент має індекс, який дорівнює загальній кількості елементів в масиві мінус 1. За зразком масива a1, що показаний вище, ось як отримати значення першого і останнього елементу:\na1[0] # поверне 1ий елемент (з індексом 0)\na1[3] # поверне 4ий елемент (з індексом 3)\n\n\nМи вже використовували масиви кілька разів, наприклад, в adventure2.rb в главі 4 ми використовували масив для зберігання карти номерів:\nmymap = Map.new([room1,room2,room3])\n\nСтворення масивів\nЯк і багато інших мов програмування, Ruby використовує квадратні дужки для визначення масиву. Ви можете легко створити масив, заповнити його деякими значеннями розділених комами та привласнити його змінній:\narray1.rb:\narr = [&#39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39;]\n\nЯк і більшість інших речей в Ruby, масиви є об&#39;єктами. Вони визначені, як неважко здогадатися, класом Array, і, так само, як рядки, вони індексуються від 0.\nВи можете посилатися на елемент в масиві шляхом розміщення його індексу в квадратних дужках. Якщо індекс недійсний, повертається nil:\narray2.rb:\narr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]\n\nputs(arr[0]) # поверне &#39;a&#39;\nputs(arr[1]) # поверне &#39;b&#39;\nputs(arr[2]) # поверне &#39;c&#39;\n\nputs(arr[3]) # nil\n\nВи можете змішувати типи даних і, навіть, включати вирази, які дають певне значення. Припустимо, що ви вже створили цей метод:\ndef hello\n  return &quot;hello world&quot;\nend\n\nТепер ви можете оголосити цей масив:\nx = [1+2, hello, `dir`]\n\nТут, перший елемент — це ціле число 3, а другий — рядок &quot;hello world&quot; (повернутий з методу hello). Якщо ви запустили код у Windows, третій елемент масиву буде рядком, який містить список директорій. Це пов&#39;язано з тим, що `dir`  це рядок в обернених лапках, який виконується в операційній системі. Фінальний “слот” в масиві, заповнений значеннями, які повернула команда dir, є рядком з іменами файлів. Якщо Ви запустите це на іншій операційній системі, можливо в такому випадку, вам потрібно буде замінити цю команду.\ndiv_array.rb:\n\nСтворення масиву із імен файлів:\nРяд класів в Ruby мають методи, які повертають масиви значень. Для прикладу, клас Dir, який використовується для операцій над дисковими каталогами, має метод entries. Передаючи ім&#39;я директорії в метод і повертаючи список файлів в масиві:\nDir.entries(&#39;C:\\\\&#39;) # поверне масив файлів розміщених в каталозі C:\\\n\n\nЯкщо ви хочете створити масив рядків, але не хочете турбуватись про друкуванням всіх лапок, це скорочення візьме текст без лапок, який буде розділений лише відступами в круглих дужках поруч з %w ось так:\ny = %w(this is an array of strings)\n\nЗвичайно, ви можете створити масив, використовуючи звичайний метод побудови об&#39;єкта: new. При бажанні, ви можете передати ціле число до new, щоб створити порожній масив специфічного розміру (в якому кожен елемент буде мати значення nil) або ви можете передати два аргументи: перший, щоб встановити розмір масиву і другий, щоб визначити елемент, який буде розміщено в кожному елементі, наприклад:\na = Array.new                   # порожній масив\na = Array.new(2)                # [nil,nil]\na = Array.new(2,&quot;hello world&quot;)  # [&quot;hello world&quot;,&quot;hello world&quot;]\n\nБагатовимірні масиви\nЩоб створити багатомірний масив, ви можете створити один масив, а потім додати інші масиви до кожного зі своїх “слотів”. Наприклад, цей приклад створить масив, що містить два елементи, кожен з яких сам є масивом з двох елементів:\na = Array.new(2)\na[0]= Array.new(2,&#39;hello&#39;)\na[1]= Array.new(2,&#39;world&#39;)\n\nАбо ви могли б вкласти масиви всередині один одного, використовуючи квадратні дужки. Цей приклад створить масив з чотирьох масивів, кожен з яких містить чотири цілих числа:\na = [ [1,2,3,4],\n      [5,6,7,8],\n      [9,10,11,12],\n      [13,14,15,16] ]\n\nВ коді показаному вище, я розмістив чотири “підмасиви” в різних рядках. Це не обов&#39;язково, але це допомагає прояснити структуру багатовимірного масиву шляхом відображення кожного підмасиву так, якби це був рядок, подібно рядкам в таблиці. Коли мова йде про масиви в межах масивів, зручно посилатися на кожен вкладений масив, як “ряд” з “зовнішнього” масиву.\narray_new.rb:\n\n Можливо також створити об&#39;єкт Array, передавши масив як аргумент методу new . Будьте обережні. Це примха Ruby, хоч й дозволено передавати в масив аргумент без закриття круглих дужок, Ruby буде вважати помилкою, якщо ви пропустите відступ між методом new і відкриттям квадратних дужок – це ще одна причина для створення міцної звички використовувати дужки при передачі аргументів!\n\nmulti_array.rb:\nДля деяких прикладів використання багатовимірних масивів, завантажте програму multi_array.rb. Вона починається зі створення масиву, multiarr, який містить два інших масиви. Перший із цих масивів має індекс 0 відносно multiarr, а інший — 1:\nmultiarr = [[&#39;one&#39;,&#39;two&#39;,&#39;three&#39;,&#39;four&#39;],[1,2,3,4]]\n\nПеребір масивів\nВи можете отримати доступ до елементів масиву перебираючи їх та використовуючи цикл for. Цикл обійде два елементи: а саме, два підмасиви з індексами 0 і 1:\nfor i in multiarr\n  puts(i.inspect)\nend\n\nЦе відобразить:\n[&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]\n[1, 2, 3, 4]\n\n\nІтератори і цикли for. Код всередині циклу for виконується для кожного елементу. Загальний синтаксис виглядає таким чином:\nfor &lt;одна або більше змінних&gt; in &lt;вираз&gt; do\n  &lt;код для запуску&gt;\nend\n\nКоли в наявності більше однієї змінної, вони передаються в код в середині блоку for..end так само, як би ви б передавали аргументи в метод. Ось, наприклад, ви можете думати про (a,b,c,d) як про чотири аргументи, які вже об&#39;явлені, при кожному проході циклу for, чотирма значеннями з рядка multiarr:\nfor (a,b,c,d) in multiarr\n  print(&quot;a=#{a}, b=#{b}, c=#{c}, d=#{d}\\n&quot;)\nend\n\n\nІндексація всередині масивів\nВи можете рахувати з кінця масиву, використовуючи знак мінусу, де -1 — це індекс останнього елементу; і ви, також, маєте можливість використовувати діапазони (значення між початковим індексом і кінцевим, розділеними двома крапками):\narray_index.rb:\narr = [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39; &#39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39;]\n\nprint( arr[0,5] )     #=&gt; „hello‟\nprint( arr[-5,5 ] )   #=&gt; „world‟\nprint( arr[0..4] )    #=&gt; „hello‟\nprint( arr[-5..-1] )  #=&gt; „world‟\n\nЗауважте, що, так як і з рядками, коли надано два цілих числа, щоб повернути багато суміжних пунктів з безлічі, перше число — це початковий індекс, тоді, як друге — це кількість елементів (не індекс):\narr[0,5] # поверне 5 знаків - [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]\n\nВи, також, маєте можливість зробити призначення значень конкретному індексу в масиві. Ось, наприклад, я спочатку створив порожній масив і заповнив елементи з індексами 0, 1 та 3. &quot;Порожній&quot; індекс під номером 2 буде заповнений значенням nil:\narray_assign.rb:\narr = []\n\narr[0] = [0]\narr[1] = [&quot;one&quot;]\narr[3] = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]\n# масив тепер містить:\n# [[0], [&quot;one&quot;], nil, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]]\n\nПовторимо ще раз, ви можете використовувати як індекси початку, кінця, діапазони і негативні значення індексів:\narr2 = [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39; &#39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39;]\n\narr2[0] = &#39;H&#39;\narr2[2,2] = &#39;L&#39;, &#39;L&#39;\narr2[4..6] = &#39;O&#39;,&#39;-&#39;,&#39;W&#39;\narr2[-4,4] = &#39;a&#39;,&#39;l&#39;,&#39;d&#39;,&#39;o&#39;\n\n# arr2 тепер містить:\n# [&quot;H&quot;, &quot;e&quot;, &quot;L&quot;, &quot;L&quot;, &quot;O&quot;, &quot;-&quot;, &quot;W&quot;, &quot;a&quot;, &quot;l&quot;, &quot;d&quot;, &quot;o&quot;]\n\n"},"chapters/06-Hashes.html":{"url":"chapters/06-Hashes.html","title":"Глава 6: Хеші","body":"Глава шоста\n\nХеші…\n\nМасиви надають хороший спосіб індексації елементів колекції за числом, однак можуть бути випадки, коли набагато зручніше індексувати їх по–іншому. Якщо, наприклад, ви створювали колекцію рецептів, було б набагато зрозуміліше індексувати рецепти за їхніми назвами, як от “Великий шоколадний торт” та “Coq au Vin”, а не 23, 87 і так далі.\nRuby має клас, який дозволяє вам зробити це. Він називається Hash (хеш). Він еквівалентний до того, що у інших мовах називають словником. Як і справжній словник, елементи індексуються за деяким унікальним ключем (у словнику — це може бути словом) та значенням (у словнику — це визначення для певного слова).\nСтворення хешів\nhash1.rb:\nВи можете створити хеш шляхом створення нового екземпляра класу Hash:\nh1 = Hash.new\nh2 = Hash.new(&quot;Some kind of ring&quot;)\nhash1.rb\n\nОбидва приклади створюють порожній хеш. Об’єкт Hash завжди має значення за замовчуванням – значення, яке буде повертатись тоді, коли не знайдеться відповідне значення для певного індексу. У цих прикладах, h2 ініціалізований зі значенням за замовчуванням: &quot;Some kind of ring&quot;; h1 ініціалізується без такого значення, тому його значенням за замовчуванням буде nil.\nМоючи створений Hash–об’єкт, ви можете додавати у нього елементи, використовуючи синтаксис схожий на масиви: вказуючи індекс між квадратними дужками та використовуючи = для присвоєння значення.\nОчевидна відмінність тут у тому, що для масивів індексом (ключем) має бути ціле число; для хешу це може бути будь-який унікальний елемент даних:\nh2[&#39;treasure1&#39;] = &#39;Silver ring&#39;\nh2[&#39;treasure2&#39;] = &#39;Gold ring&#39;\nh2[&#39;treasure3&#39;] = &#39;Ruby ring&#39;\nh2[&#39;treasure4&#39;] = &#39;Sapphire ring&#39;\n\nЧасто ключем може бути число або, як у прикладі вище, рядок. В принципі, ключем може бути об’єкт будь–якого типу. Маючи деякий клас, скажімо X, таке присвоєння є цілком можливим:\nx1 = X.new(&#39;my Xobject&#39;)\nh2[x1] = &#39;Diamond ring&#39;\n\nЄ коротший спосіб створення хешів та ініціалізації їх з парами ключ–значення. Просто додайте ключ, після якого буде йти =&gt; та асоційоване з ним значення. Кожна пара ключ–значення повинна бути відділена комою, а всі пари ключів та значень мають бути всередині фігурних дужок:\nh1 = {\n    &#39;room1&#39; =&gt; &#39;The Treasure Room&#39;,\n    &#39;room2&#39; =&gt; &#39;The Throne Room&#39;,\n    &#39;loc1&#39; =&gt; &#39;A Forest Glade&#39;,\n    &#39;loc2&#39; =&gt; &#39;A Mountain Stream&#39; }\n\n\nУнікальні ключі?\nПотурбуйтесь про присвоєння ключів в хеші. Якщо ви використовуєте один і той самий ключ двічі, ви перезаписуєте початкове значення. Це те саме, що і двічі присвоїти значення одному й тому ж індексові масиву. Розглянемо такий приклад:\nh2[&#39;treasure1&#39;] = &#39;Silver ring&#39;\nh2[&#39;treasure2&#39;] = &#39;Gold ring&#39;\nh2[&#39;treasure3&#39;] = &#39;Ruby ring&#39;\nh2[&#39;treasure1&#39;] = &#39;Sapphire ring&#39;\n\nТут ключ &#39;treasure1&#39; було використано двічі. Як результат, &#39;Silver ring&#39; буде замінено &#39;Sapphire ring&#39;, тому ми отримаємо такий хеш:\n{ &quot;treasure1&quot; =&gt; &quot;Sapphire ring&quot;, &quot;treasure2&quot; =&gt; &quot;Gold ring&quot;, &quot;treasure3&quot; =&gt; &quot;Ruby ring&quot;}\n\n\nІндексування в хеші\nЩоб звернутись до значення в хеші, вкажіть ключ між двома квадтратними дужками:\nputs(h1[&#39;room2&#39;]) #=&gt; &quot;The Throne Room&quot;\n\nЯкщо ви передасте ключ, якого не існує, повернеться значення за замовчуванням. Пригадайте, що ми не передавали значення за замовчуванням для h1, проте робили це для h2:\np(h1[&#39;unknown_room&#39;])       #=&gt; nil\np(h2[&#39;unknown_treasure&#39;])   #=&gt; &#39;Some kind of ring&#39;\n\nВикористовуйте метод default, щоб отримати значення за замовчуванням та метод default=, щоб встановити його (дивіться Главу 4 для детальнішої інформації про get та set методи):\np(h1.default)\nh1.default = &#39;A mysterious place&#39;\n\nОперації над хешами\nhash2.rb:\nМетоди keys (ключі) та values (значення) для Hash повертають масиви, тож ви можете використовувати різні методи масивів, щоб маніпулювати ними. Ось кілька простих прикладів (зауважте, що значення, які отримаються в результаті запуску рядка коду, показані у коментарях, що починаються з #=&gt;):\nh1 = { &#39;key1&#39;=&gt;&#39;val1&#39;, &#39;key2&#39;=&gt;&#39;val2&#39;, &#39;key3&#39;=&gt;&#39;val3&#39;, &#39;key4&#39;=&gt;&#39;val4&#39; }\nh2 = { &#39;key1&#39;=&gt;&#39;val1&#39;, &#39;KEY_TWO&#39;=&gt;&#39;val2&#39;, &#39;key3&#39;=&gt;&#39;VALUE_3&#39;, &#39;key4&#39;=&gt;&#39;val4&#39; }\n\np(h1.keys &amp; h2.keys)          # перетин множин (ключів)\n#=&gt; [&quot;key1&quot;, &quot;key3&quot;, &quot;key4&quot;]\n\np(h1.values &amp; h2.values)      # перетин ключів (значень)\n#=&gt; [&quot;val1&quot;, &quot;val2&quot;, &quot;val4&quot;]\n\np(h1.keys + h2.keys)          # конкатенація\n#=&gt; [&quot;key1&quot;, &quot;key2&quot;, &quot;key3&quot;, &quot;key4&quot;, &quot;key1&quot;, &quot;key3&quot;, &quot;key4&quot;, &quot;KEY_TWO&quot;]\n\np(h1.values - h2.values)      # відмінність\n#=&gt; [&quot;val3&quot;]\n\np((h1.keys &lt;&lt; h2.keys))       # додавання в кінець\n#=&gt; [&quot;key1&quot;, &quot;key2&quot;, &quot;key3&quot;, &quot;key4&quot;, [&quot;key1&quot;, &quot;key3&quot;, &quot;key4&quot;, &quot;KEY_TWO&quot;]]\n\np((h1.keys &lt;&lt; h2.keys).flatten.reverse) # розгортання масивів та реверсування\n#=&gt; [&quot;KEY_TWO&quot;, &quot;key4&quot;, &quot;key3&quot;, &quot;key1&quot;, &quot;key4&quot;, &quot;key3&quot;, &quot;key2&quot;, &quot;key1&quot;]\n\nЗверніть особливу увагу на відмінність між конкатенацією з допомогою +, щоб додавати значення другого масиву до першого, та додаванням в кінець з допомогою &lt;&lt;, щоб додавати цілий другий масив, як останній елемент першого масиву:\na =[1,2,3]\nb =[4,5,6]\nc = a + b       #=&gt; c=[1, 2, 3, 4, 5, 6] a=[1, 2, 3]\na &lt;&lt; b          #=&gt; a=[1, 2, 3, [4, 5, 6]]\n\nПри додаванні через &lt;&lt;, перший масив (приймач або receiver) модифікується, тоді як + повертає новий масив, а масив–приймач залишає незміненим. Якщо після додавання в кінець масиву через &lt;&lt; ви вирішите, що ви хочете додати елементи масиву, замість того, щоб вкладати цілий масив масив–приймач, ви можете зробити це з допомогою методу flatten:\na=[1, 2, 3, [4, 5, 6]]\na.flatten #=&gt; [1, 2, 3, 4, 5, 6]\n\n"},"chapters/07-Loops-and-Iterators.html":{"url":"chapters/07-Loops-and-Iterators.html","title":"Глава 7: Цикли та ітератори","body":"Глава сьома\n\nЦикли та ітератори…\n\nБагато чого у програмуванні пов’язане з діями, які повторюються. Можливо, вам знадобиться програма, яка подаватиме звуковий сигнал 10 разів, читатиме рядки з файлу, поки у ньому є що читати, або показуватиме повідомлення, поки користувач не натисне клавішу. Ruby надає вам кілька способів виконати такі повторення.\nЦикл for\nУ багатьох мовах програмування, коли ви хочете запустити код певну кількість разів, ви можете просто вставити цей код всередину циклу for. У більшості мов ви маєте дати циклу for змінну ініціалізовану з початковим значенням, яка буде збільшуватись на 1 на кожній ітерації, поки вона не досягне певного кінцевого значення. Коли кінцеве значення досягнуто, цикл for припиняє виконання. Ось традиційна версія циклу for написана мовою Pascal:\n(* Це код на Pascal, а не на Ruby! *)\nfor i := 1 to 3 do\n  writeln(i);\n\nfor_loop.rb:\nЗ Глави 5 (про масиви) ви можете пам’ятати, що цикл for у Ruby працює зовсім іншим чином! Замість того, щоб передавати початкове та кінцеве значення, ми передаємо циклу for список елементів, і він ітерується по ньому від одного до іншого, присвоюючи значення на кожній ітерації певні змінній циклу. Це триває аж поки він не досягне кінця списку.\nНаприклад, ось цикл for, що ітерується по елементах масиву, виводячи їх на екран:\n# А ось це вже код на Ruby…\nfor i in [1, 2, 3] do\n  puts(i)\nend\n\nЦикл for більше схожий на ітератор for each, який пропонують деякі інші мови програмування. Так і є, автор Ruby описує for як синтаксичний цукор для методу each, який імплементують типи колекцій у Ruby, такі як Array (масиви), Set (множини), Hash (хеші) та String (рядки) (самі рядки є колекціями символів).\nДля порівняння, ось як виглядатиме цикл for з прикладу вище, якщо переписати його з допомогою методу each:\neach_loop.rb:\n[1, 2, 3].each do |i|\n  puts(i)\nend\n\nЯк бачите, між ними справді немає суттєвої відмінності.\nЩоб перетворити цикл for на ітератор each, все що мені потрібно зробити — це видалити for та додати після масиву .each. Потім я передаю змінну ітератора i, яка стоїть між двома символами вертикальних рисок.\nПорівняйте ці приклади, щоб побачити, наскільки цикл for та ітератор each схожі між собою:\nfor_each.rb:\n# --- Приклад 1 ---\n\n# i) for\nfor s in [&#39;один&#39;, &#39;два&#39;, &#39;три&#39;] do\n  puts(s)\nend\n\n# ii) each\n[&#39;один&#39;, &#39;два&#39;, &#39;три&#39;].each do |s|\n  puts(s)\nend\n\n# --- Приклад 2 ---\n\n# i) for\nfor x in [1, &quot;два&quot;, [3, 4, 5]] do puts(x) end\n\n# ii) each\n[1, &quot;два&quot;, [3, 4, 5]].each do |x| puts(x) end\n\nЗверніть увагу, що ключове слово do є необов’язковим для циклу for, який займає декілька рядків, проте воно необхідне, коли цикл записаний у одному рядку:\n# Тут ключове слово &quot;do&quot; можна упустити\nfor s in [&#39;один&#39;, &#39;два&#39;, &#39;три&#39;]\n  puts(s)\nend\n\n# Проте тут воно є обов’язковим\nfor s in [&#39;один&#39;, &#39;два&#39;, &#39;три&#39;] do puts(s) end\n\nfor_to.rb:\n\nЯк написати звичайний цикл for…\nЯкщо вам знадобиться більш традиційний цикл for, ви завжди можете зімітувати його в Ruby, якщо цикл for ітеруватиме по значеннях проміжку. Наприклад, ось як можна використати змінну циклу for, щоб порахувати від 1 до 10, виводячи її значення на кожній ітерації циклу:\nfor i in (1..10) do\n  puts(i)\nend\n\nЦе може бути перезаписано з використанням each:\n(1..10).each do |i|\n  puts(i)\nend\n\n\nТим не менше, зверніть увагу на те, що вираз проміжку, як от 1..3, повинен бути записаний між двома круглими дужками, при використанні методу each, в іншому випадку Ruby подумає, що ви намагаєтесь використати each, як метод останнього з чисел (FixNum), замість цілого виразу (Range). Проте дужки є необов’язковими, якщо використовувати проміжок з циклом for.\nПри ітерації по значення з допомогою each, блок коду між do та end називається (очевидно, чи не так?) блоком ітератора.\n\nПараметри блоку. У Ruby будь–які змінні, які оголошені між вертикальними рисками на початку блоку, називаються параметрами блоку. Крім цього, блок працює як функція, а параметри блоку — як список аргументів функції. Метод each запускає код всередині блоку і передає в нього аргументи, які отримуються з колекції (наприклад, з масиву).\n\nБлоки\nRuby має альтернативний синтаксис для виокремлення блоків. Ви можете використовувати do..end так…\nblock_syntax.rb:\n# do..end\n[[1,2,3],[3,4,5],[6,7,8]].each do |a,b,c|\n  puts(&quot;#{a}, #{b}, #{c}&quot;)\nend\n\nАбо користуватись фігурними дужками {..} ось так:\n# curly braces {..}\n[[1,2,3],[3,4,5],[6,7,8]].each { |a,b,c|\n  puts(&quot;#{a}, #{b}, #{c}&quot;)\n}\n\nНе важливо, які позначення ви використовуєте, ви маєте бути певні лише в тому, що відкриваюче позначення, { або do, розміщене на тому ж рядку, що і метод each. Перенесення на новий рядок між each та відкриваючим позначенням спричинить синтаксичну помилку.\nЦикл while\nRuby також має декілька інших конструкцій для циклів. Ось як можна працювати з циклом while (поки):\nwhile tired     # поки втомлений\n  sleep         #   спати\nend             #\n\nАбо, записуючи по іншому:\nsleep while tired   # спати поки втомлений\n\nЦі два приклади виконують одні і ті ж дії, не дивлячись на те, що їх синтаксис відрізняється. У першому прикладі, код між while та end (тут це виклик методу sleep) виконується, поки тестова булева умова (яка, у цьому випадку, є значенням, яке повертається методом tired) залишається істинною.\nЯк і в циклах for, ключове слово do між тестовою умовою та кодом, який має виконуватись, якщо вони не стоять на одному рядку, є необов’язковим; ключове слово do, відповідно, обов’язкове, якщо тестова умова і код знаходяться на одному рядку.\nМодифікатори while\nУ іншій версії циклу (sleep while tired), код, який має виконуватись (sleep), стоїть перед тестовою умовою (while tired). Такий синтаксис називається модифікатором while. Якщо ви хочете виконати кілька виразів, використовуючи такий запис, ви можете огорнути їх ключовими словами begin та end:\nbegin               #\n    sleep           #   спати\n    snore           #   хропіти\nend while tired     # поки втомлений\n\nОсь приклад, який показує різні альтернативні записи:\nwhile.rb:\n$hours_asleep = 0\n\ndef tired\n    if $hours_asleep &gt;= 8 then\n        $hours_asleep = 0\n        return false\n    else\n        $hours_asleep += 1\n        return true\n    end\nend\n\ndef snore\n    puts(&#39;храп....&#39;)\nend\n\ndef sleep\n    puts(&quot;z&quot; * $hours_asleep)\nend\n\nwhile tired do sleep end    # однорядковий цикл while\n\nwhile tired                 # багаторядковий цикл while\n    sleep\nend\n\nsleep while tired           # однорядковий модифікатор while\n\nbegin                       # багаторядковий модифікатор while\n    sleep\n    snore\nend while tired\n\nОстанній приклад (багаторядковий модифікатор while modifier) потребує детальнішого розгляду, оскільки він відкриває для нас нову важливу поведінку. Якщо блок коду, що визначається через begin та end, передує перевірці while, цей код виконається принаймні один раз. У інших циклах while, код ніколи не виконається, якщо булева умова відразу є істинною.\nwhile2.rb:\n\nКоли цикл виконується принаймні один раз\nЗазвичай, цикл while виконується 0 або більше разів, оскільки булева перевірка виконується до того, як виконається сам цикл; якщо перевірка повертає false, код всередині циклу не виконається ніколи.\nОднак, якщо перевірка while слідує після коду, який огорнутий в begin та end, цикл виконується 1 або більше разів, тому що булевий вираз виконується after коду всередині циклу.\nЩоб відчути різницю між поведінкою цих двох типів циклу while, запустіть while2.rb. Ці приклади допоможуть зрозуміти краще:\nx = 100\n\n# Код у цьому циклі ніколи не виконається\nwhile (x &lt; 100) do puts(&#39;x &lt; 100&#39;) end\n\n# Код у цьому циклі ніколи не виконається\nputs(&#39;x &lt; 100&#39;) while (x &lt; 100)\n\n# Код у цьому циклі виконається один раз\nbegin puts(&#39;x &lt; 100&#39;) end while (x &lt; 100)\n\n\nЦикл until\nRuby також має цикл until, який можна трактувати як цикл поки не. Його синтаксис та параметри такі ж, як і у while – тобто тестова перевірка та код можуть розташовуватись на одному рядку (звісно, якщо між ними є ключове слово do) або на декількох рядках (тоді do необов’язкове). Також, є модифікатор until, який дає вам можливість розмістити код до тестової перевірки. Якщо ж ви огортаєте код між begin та end, пам’ятайте, що він виконається щонайменше один раз.\nuntil.rb:\nОсь прості приклади з циклом until:\ni = 10\n\nuntil i == 10 do puts(i) end    # ніколи не виконається\n\nuntil i == 10                   # ніколи не виконається\n    puts(i)\n    i += 1\nend\n\nputs(i) until i == 10           # ніколи не виконається\n\nbegin                           # виконається один раз\n    puts(i)\nend until i == 10\n\nОбидва цикли while та until, так само як і цикл for, можна використовувати для ітерування по масивах та інших колекціях. Наприклад, ось як можна ітеруватись по всіх елементах масиву:\nwhile i &lt; arr.length\n    puts(arr[i])\n    i += 1\nend\n\nuntil i == arr.length\n    puts(arr[i])\n    i +=1\nend\n\n"},"chapters/08-Conditional-Statements.html":{"url":"chapters/08-Conditional-Statements.html","title":"Глава 8: Умовні оператори","body":"Глава восьма\n\nУмовні оператори…\n\nКомп’ютерні програми, як і саме життя, сповнені складних рішень, які потрібно приймати. Такі речі, як: якщо я лежатиму більше у ліжку, я довше спатиму, інакше мені потрібно буде йти на роботу; якщо я піду на роботу, я зароблю гроші, інакше я втрачу свою роботу - і так далі…\nМи вже виконували декілька if–перевірок у попередніх програмах. Ось простий приклад з обчислювача податку з першої глави:\nif (subtotal &lt; 0.0) then\n  subtotal = 0.0\nend\n\nЦя програма просила користувача ввести значення subtotal, яке використовувалось для обчислення податку. Маленька перевірка вище страхує нас від того, що subtotal буде від’ємним. Якщо користувач, в божевільному пориві введе значення, яке менше за 0, перевірка if це помітить, оскільки (subtotal &lt; 0.0) буде істинним, а це спричинить до того, що код між перевіркою if та ключовим словом end виконається. У нашому випадку він встановить значення subtotal рівне 0.\n\nОдне дорівнює = чи два ==?\nЯк і у більшості мовах програмування, Ruby використовує один знак рівності для присвоєння значення =, а два — для порівняння значень ==.\n\nif..then..else\nif_else.rb:\nПроста перевірка if має лише два можливих результати. Код або виконається, або ні, в залежності від істиності або хибності перевірки.\nЧасто вам потрібно мати більше, ніж два можливих результати. Давайте припустимо, наприклад, що програма повинна виконуватись одним способом, якщо день тижня будній та іншим — якщо вихідним. Ви можете перевірити це, додавши секцію else після секції if, ось так:\nif aDay == &#39;Субота&#39; or aDay == &#39;Неділя&#39;\n    daytype = &#39;вихідний&#39;\nelse\n    daytype = &#39;будень&#39;\nend\n\nТут умова if є простою. Вона перевіряє дві можливі умови:\n\nзначення змінної aDay рівне рядку &#39;Субота&#39; або…\nзначення змінної aDay рівне рядку &#39;неділя&#39;.\n\nЯкщо якась з цих умов є істинною, тоді виконується наступний рядок:\ndaytype = &#39;вихідний&#39;\n\nУ всіх інших випадках виконується код після else:\ndaytype = &#39;будень&#39;\n\nif_then.rb:\n\nКоли перевірка if та код, який треба виконати, знаходяться на різних рядках, ключове слово then є необов’язковим. Коли перевірка і код розміщені на одному рядку, між ними обов’язково має стояти ключове слово then (або, якщо ви надаєте перевагу лаконічному коду, двокрапка):\nif x == 1 then puts(&#39;ok&#39;) end    # з &#39;then&#39; \nif x == 1 : puts(&#39;ok&#39;) end       # з двокрапкою\nif x == 1 puts(&#39;ok&#39;) end         # синтаксична помилка!\n\n\nПеревірка if не обмежена виконанням лише двох умов. Припустимо, наприклад, що ваш код має розуміти, чи певний день є робочим днем чи святковим. Всі будні є робочими днями; всі суботи є святковими днями, але неділі є лише святами, коли ви не працюєте понаднормово.\n\nПримітка перекладача:\nУ прикладі вище наведений переклад оригінального тексту. Автор книги — американець, а в Сполучених Штатах Америки неділя вважається першим днем тижня.\n\nЦе моя перша спроба написати перевірку, яка задовольнятиме цим умовам:\nworking_overtime = true\n\nif aDay == &#39;Субота&#39; or aDay == &#39;Наділя&#39; and not working_overtime\n    daytype = &#39;свято&#39;\n    puts( &quot;Уурраа!&quot; )\nelse\n    daytype = &#39;робочий день&#39;\nend\n\nand_or.rb:\nНа жаль, це не працює достатньо добре. Пам’ятайте, що субота є завжди святом. Проте цей код наполягає, що &#39;субота&#39; — робочий день. Це стається тому, що Ruby сприймає перевірку так: “Якщо цей день — субота і я не працюю понаднормово, або якщо цей день — неділя, і я не працюю понаднормово” — проте насправді я мав на увазі: “Якщо це день — субота або якщо цей день — неділя, і я не працюю понаднормово”.\nНайпростіший спосіб вирішити цю неточність — огорнути перевірки, які мають трактуватись як одне ціле, в круглі дужки, ось так:\nif aDay == &#39;Субота&#39; or (aDay == &#39;Неділя&#39; and not working_overtime)\n\nand, or, not\nМіж іншим, Ruby має два різні записи для булевих умов.\nУ прикладі, наведеному вище, я використав оператори у вигляді англійських слів: and (і/та), or (або) та not (ні). Якщо хочете, ви можете використовувати альтернативні оператори, подібні до тих, які є у інших мовах програмування, а саме: &amp;&amp; (і/та), || (або) та ! (ні).\nТим не менше, будьте обережні, ці дві групи операторів не повністю взаємозамінні. Зокрема, вони мають різну пріоритетність, а це означає, що при використанні різних операторів у перевірці, її частини можуть виконуватись по–різному в залежності від того, який оператор ви використовуєте.\nif..elsif\nБез сумнівно бувають ситуації, коли вам необхідно виконати різні дії для різних альтернативних умов. Один зі способів зробити це — виконання умови if, після якої слідуватиме серія інших перевірок з ключовими словами elsif. Після всіх перевірок мусить стояти ключове слово end.\nif_elsif.rb:\nНаприклад, тут я почергово, в циклі while, прошу користувача ввести дані. Умова if перевіряє, чи користувач ввів &#39;q&#39; (я використовую метод chomp(), щоб видалити небажані символи з вводу). Якщо &#39;q&#39; не введено, перша умова elsif перевіряє, чи цілочисельне значення введених даних (input.to_i) більше за 800. Якщо результат перевірки є хибним наступна умова elsif перевіряє, чи цілочисельне значення є меншим або більшим за 800:\nwhile input != &#39;q&#39; do\n    puts(&quot;Введіть число від 1 до 1000 (або &#39;q&#39; для виходу)&quot;)\n    print(&quot;?- &quot;)\n    input = gets().chomp()\n    if input == &#39;q&#39;\n        puts(&quot;Бувай&quot;)\n    elsif input.to_i &gt; 800\n        puts(&quot;Це зависокий рівень оплати!&quot;)\n    elsif input.to_i &lt;= 800\n        puts(&quot;Це ми потягнемо&quot;)\n    end\nend\n\n\nЦей код має баг. Він просить ввести число від 1 до 1000, проте приймає й інші числа. Давайте спробуємо переписати цю перевірку без помилок!\n\nif_else_alt.rb:\n\nRuby також має скорочену форму запису if..then..else в якій знак питання ? заміняє if..then, а двокрапка поводиться як else…\n&lt;умова&gt; ? &lt;якщо істина&gt; : &lt;якщо хиба&gt;\nНаприклад:\nx == 10 ? puts(&quot;це 10&quot;) : puts(&quot;це якесь інше число&quot;)\n\nКоли перевірка умови є комплексною (якщо вона використовує and та or), вам слід огорнути її у дужки.\nЯкщо перевірка та код займають декілька рядків, ? має стояти на тому ж рядку, що й умова, що передує йому, а : повинна бути на тому ж рядку, що і код, який йде після ?.\nІншими словами, якщо ви розмістити перехід на новий рядок перед ? або :, ви отримаєте синтаксичну помилку. Ось приклад правильного багаторядкового блоку коду:\n(aDay == &#39;Субота&#39; or aDay == &#39;Неділя&#39;) ?\n  daytype = &#39;вихідний&#39; :\n  daytype = &#39;будень&#39;\n\n\nunless\nunless.rb:\nRuby також може виконувати перевірку unless, яка є протилежною до перевірки if:\nunless aDay == &#39;Субота&#39; or aDay == &#39;Неділя&#39;\n    daytype = &#39;вихідний&#39;\nelse\n    daytype = &#39;будень&#39;\nend\n\nДумайте про unless як про альтернативний спосіб перевірити якщо не. Ось відповідний еквівалент коду наведеного вище:\nif !(aDay == &#39;Субота&#39; or aDay == &#39;Неділя&#39;)\n    daytype = &#39;вихідний&#39;\nelse\n    daytype = &#39;будень&#39;\nend\n\nМодифікатори if та unless\nВи напевно пригадуєте альтернативний запис для циклу while з Глави 7. Замість того, щоб писати так…\nwhile tired do sleep end    # поки втомлений спати\n\n…ми можемо переписати це ось так:\nsleep while tired   # спати поки втомлений\n\nАльтернативний запис, при якому ключове слово while розташоване між кодом, який треба виконати та тестовою умовою, називається модифікатор while. Так от, Ruby також має модифікатори if та unless. Ось кілька прикладів:\nif_unless_mod.rb:\nsleep if tired   # спати якщо втомлений\n\nbegin            #\n  sleep          #   спати\n  snore          #   хропіти\nend if tired     # якщо втомлений\n\nsleep unless not tired    # не спати якщо не втомлений \n\nbegin                     # \n  sleep                   #   спати\n  snore                   #   хропіти\nend unless not tired      # якщо не не втомлений\n\nСтислість такого запису корисна, коли, приміром, вам потрібно швидко виконати добре визначену дію, якщо умова є істинною.\nОсь, як ви можете додати у ваш код зневаджувальний вивід, якщо константа DEBUG має істинне значення:\nputs(&quot;somevar = #{somevar}&quot;) if DEBUG\n\nОператор case\nКоли вам потрібно виконати ряд різних дій, в залежності від значення однієї змінної, декілька перевірок if..elsif є занадто багатослівними і містять багато повторень. Елегантне альтернативне рішення пропонує оператор case. Він починається зі слова case, після якого йде назва змінної для перевірки. Після цього йде ряд секцій when, кожна з яких визначає пускове значення для коду, який йде після неї. Цей код виконується, лише коли значення змінної, яка перевіряється, дорівнює пусковому значенню:\ncase.rb:\ncase(i)\n    when 1 : puts(&quot;Понеділок&quot;)\n    when 2 : puts(&quot;Вівторок&quot;)\n    when 3 : puts(&quot;Середа&quot;)\n    when 4 : puts(&quot;Четвер&quot;)\n    when 5 : puts(&quot;П’ятниця&quot;)\n    when (6..7) : puts(&quot;Юху! Вихідні!&quot;)\n    else puts(&quot;Такого дня не існує!&quot;)\nend\n\nУ цьому прикладі я використовую двокрапку, щоб відділити перевірку when від коду, який має виконуватись. Ви також можете використовувати ключове слово then:\nwhen 1 then puts(&quot;Понеділок&quot;)\n\nДвокрапка або then можна упустити, якщо перевірка та код, який виконається, розміщені на різних рядках. На відміну від оператора case у C-подібних мовах, немає потреби вставляти ключове слово break для того, що перервати перехід виконання до секцій, які знаходяться нижче.\nВ Ruby, як тільки знайдене співпадіння, оператор case завершує роботу:\ncase(i)\n    when 5 : puts(&quot;П’ятниця&quot;)\n        puts(&quot;...майже вихідні!&quot;)\n    when 6 : puts(&quot;Субота!&quot;)\n        # the following never executes\n    when 5 : puts(&quot;А тепер знову п’ятниця!&quot;)\nend\n\nВи можете декілька рядків коду між кожною умовою when, і ви можете перелічити декілька значень розділених комами, щоб запустити певний блок when, ось так:\nwhen 6, 7 : puts(&quot;Юху! Вихідні!&quot;)\n\nУмова в операторі case не обов’язково має бути простою змінною, це може бути і вираз, як от:\ncase(i + 1)\n\nВи також можете використовувати нецілочисельні типи, як от рядки.\nДекілька пускових значень визначених у секції when можуть мати різні типи – наприклад, і рядки, і цілі числа:\nwhen 1, &#39;Monday&#39;, &#39;Mon&#39; : puts(&quot;Так, &#39;#{i}&#39; це понеділок&quot;)\n\ncase2.rb:\nОсь розгорнутіший приклад, який ілюструє синтаксичні елементи, про які йшлось раніше:\ncase(i)\n    when 1 : puts(&quot;Понеділок&quot;)\n    when 2 : puts(&quot;Вівторок&quot;)\n    when 3 : puts(&quot;Середа&quot;)\n    when 4 : puts(&quot;Четвер&quot;)\n    when 5 then puts(&quot;П’ятниця&quot;)\n        puts(&quot;...майже вихідні!&quot;)\n    when 6, 7\n        puts(&quot;Субота!&quot;) if i == 6\n        puts(&quot;Неділя!&quot;) if i == 7\n        puts(&quot;Юху! Вихідні!&quot;)\n            # все, що нижче ніколи не виконається\n    when 5 : puts(&quot;А тепер знову п’ятниця!&quot;)\n    else puts(&quot;Такого дня не існує!&quot;)\nend\n\n"},"chapters/09-Modules-and-Mixins.html":{"url":"chapters/09-Modules-and-Mixins.html","title":"Глава 9: Модулі та домішки","body":"Глава дев’ята\n\nМодулі та домішки…\n\nЯк згадано у попередніх главах, кожен клас у Ruby має одного найближчого батька, хоча кожен батько може мати багато дітей.\nОбмежуючи ієрархію класів однією лінією наслідування, Ruby уникає дакількох проблем, які можуть виникати у таких мовах програмування (як от C++), які  which дозволяють множинне успадкування.\nКоли клас має так багато батьків, як і дітей та їхніх батьків, а діти мають багато інших батьків та дітей, ви ризикуєте потрапити в заплутану мережу (чи може навіть павутинну?) замість того, щоб мати чітку, добре організовану ієрархію, яка вам і потрібна.\nТим не менше, часом виникають ситуації, коли корисно, щоб клас міг імплементувати функціональність, яка є спільною з більше, ніж одним попередньо визначеним класом.\nНаприклад, Sword (меч) може належати до типу Weapon (зброя), але крім того належати й до типу Treasure (знахідка); House (будинок) може належати не лише до типу Building (будівля), але й до Investment (інвестиція) і так далі.\nМодуль — це як клас…\nRuby вирішує цю проблему, надаючи нам модулі. На перший погляд, модуль виглядає схожим на клас. Так само, як і клас, він містить константи, методи та класи.\nОсь простий модуль:\nmodule MyModule\n    GOODMOOD = &quot;веселий&quot;\n    BADMOOD = &quot;сварливий&quot;\n\n    def greet\n        return &quot;Я #{GOODMOOD}. А ти як?&quot;\n    end\nend\n\nЯк бачите, він містить константу GOODMOOD та метод екземпляру greet. Щоб перетворити цей модуль на клас, вам потрібно лише замінити у цьому оголошенні слово module на class.\nМетоди модулів\nНа додачу до методів екземпляру модуль може мати і методи модуля, в яких перед іменем стоїть назва модуля:\ndef MyModule.greet\n    return &quot;Я #{BADMOOD}. А ти як?&quot;\nend\n\nНезважаючи на схожість, класи мають дві суттєві переваги, яких не мають модулі: екземпляри (instances) та успадкування (inheritance). Класи мають екземпляри (об’єкти), батьківські класи (суперкласи) та дочірні класи (субкласи); модулі не мають нічого подібного.\nЦе змушує нас поставити собі запитання:  якщо ми не можемо створити об’єкт з модуля, для чого тоді вони?\nЦе ще одне питання, на яке ми можемо відповісти двома словами: простори (namespaces) та домішки (mixins). Домішки в Ruby дають нам можливість працювати з маленькою проблемою множинного успадкування, про яку я згадував раніше. Ми повернемось до домішок згодом, а поки що давайте подивимось на простори імен.\nМодулі як простори імен\nВи можете думати про модуль, як про свого роду, іменовану обгортку довкола множини методів, констант та класів. Різні частини коду всередині цього модуля поділяють спільний простір імен - це означає, що вони всі видимі для один одного, але невидимі для коду, що поза цим модулем.\nБібліотека класів Ruby ряд модулів, як от Math та Kernel. Модуль Math містить математичні методи, як от sqrt, щоб повертати квадратний корінь або константи, такі як PI. Модуль Kernel містить різні методи, які ми вже раніше використовували: print, puts та gets.\n\nКонстанти\nКонстанти — це як змінні, за винятком того, що їх значення не можна (і не слід!) змінювати. Фактично, змінити значення константи в Ruby можливо (незрозуміло!), проте це точно не заохочується, а Ruby зробить вам попередження, якщо ви спробуєте таке зробити. Зауважте, що константи починаються з великої літери.\n\nmodules1.rb:\nПрипустимо ми маємо такий модуль:\nmodule MyModule\n    GOODMOOD = &quot;веселий&quot;\n    BADMOOD = &quot;сварливий&quot;\n\n    def greet\n        return &quot;Я #{GOODMOOD}. А ти як?&quot;\n    end\n\n    def MyModule.greet\n        return &quot;Я #{BADMOOD}. А ти як?&quot;\n    end\nend\n\nМи можемо звернутись до константи, використовуючи ::, ось так:\nputs(MyModule::GOODMOOD)\n\nСхожим чином ми можемо звернутись до методів модуля з допомогою крапкового запису – це визначено ім’ям модуля та методу розділених крапкою. Наступний приклад виведе: Я сварливий. А ти як?:\nputs(MyModule.greet)\n\nМетоди екземпляру модуля\nЦе ставить нас перед проблемою: як отримати доступ до метода екземпляру, greet. Оскільки модуль визначає закритий простір імен, код поза цим модулем  не може побачити метод greet, тому таке не спрацює:\nputs(greet)\n\nЯкщо б це був клас, а не модуль, ми б, напевно, створили об’єкти цього класу з допомогою методу new – і кожен окремий об’єкт (кожен екземпляр цього класу), мав би доступ до методів екземпляру. Проте, як я вже раніше казав, ви не можете створити екземпляри модулів. То яким же боком ми маємо дістати наші методи екземпляру? Ось, де таємничі домішки з’являються приходять на допомогу…\nВключені модулі та домішки\nmodules2.rb:\nОб’єкт може мати доступ до методів екземпляра модуля, якщо просто включити модуль з допомогою методу include. Якщо ви включите MyModule у вашу програму, все всередині цього модуля почне існувати у поточній області видимості. Таким чином метод greet модуля MyModule тепер стане доступним:\ninclude MyModule\nputs(greet)\n\nПроцес включення модулів у клас також називають змішуванням (mixing in) модуля – це пояснює, чому включені модулі часто називають домішками (mixins).\nКоли ви включаєте об’єкти в оголошення класу, будь–який об’єкт, який створений від цього класу, матиме можливість використовувати методи екземпляру включеного модуля так, ніби вони були визначені в самому класі.\nmodules3.rb:\nclass MyClass\n    include MyModule\n\n    def sayHi\n        puts(greet)\n    end\n\n    def sayHiAgain\n        puts(MyModule.greet)\n    end\nend\n\nНе лише методи цього класу мають доступ до метода greet з MyModule, але й усі об’єкти, які створені від цього класу, ось так:\nob = MyClass.new\nob.sayHi\nob.sayHiAgain\nputs(ob.greet)\n\nЯкщо коротко, то модулі можуть використовуватись для групування пов’язаних методів, констант та класів під іменованою областю видимості. У цьому розуміння, про модулі можна думати, як про закриті одиниці коду, які можуть спростити створення бібліотек для повторного використання коду.\nmodules4.rb:\nЗ іншого боку, ви можете бути більш зацікавленні у використанні модулів в якості альтернативи множинному успадкуванню. Повертаючись до прикладу, про який я згадував на початку цієї глави, давайте припустимо, що клас Sword, який має тип, як Weapon, так і Treasure. Можливо, Sword є нащадком класуWeapon (тому успадковує такі методи як deadliness (смертоносність) та power (сила)), проте він також повинен мати методи з Treasure (такі, як value (значення) та insurance_cost (вартість страхування)). Якщо ви визначете ці методи всередині модуля Treasure, замість класу Treasure, клас Sword міг би включати модуль Treasure для того, щоб додати (змішати) методи Treasure та власні методи класу Sword.\nmod_vars.rb:\nЗауважте, між іншим, що до будь–якої змінної, яка є локальною для модуля, не можна звернутись ззовні. Це справджується, навіть якщо метод всередині модуля пробує звернутись до локальної змінної, і цей метод викликається кодом поза модулем – наприклад, коли модуль домішаний через включення. Програма mod_vars.rb ілюструє це.\nВключення модулів з файлів\nrequiremodule.rb:\nДо цього ми змішували модулі, які були оголошені всередині одного вихідного файлу. Часто корисніше оголошувати модулі у окремих файлах та включати їх за потреби. Найперше, що ви маєте зробити, щоб використовувати код з іншого файлу — завантажити цей файл використовуючи метод require, ось так:\nrequire(&quot;testmod.rb&quot;)\n\nЗавантажений файл має розташовуватися у поточній директорії, у місцях для пошуку модулів або у наперед визначеному масиві $:. Ви можете додати папку до цього масиву з допомогою звичного методу для додавання в кінець масиву &lt;&lt;, таким чином:\n$: &lt;&lt; &quot;C:/mydir&quot;\n\nМетод require повертає значення true, якщо вказаний файл завантажений успішно, інакше він повертає false. Якщо ви сумніваєтесь, можете просто вивести результат:\nputs(require(&quot;testmod.rb&quot;))\n\nНаперед визначені модулі\nНаступні модулі є вбудованими в інтерпретатор Ruby:\nComparable, Enumerable, FileTest, GC, Kernel, Math, ObjectSpace, Precision, Process, Signal\nНайважливішим попередньо визначеним модулем є Kernel, який, як сказано раніше, надає багато стандартних методів Ruby, таких як gets, puts, print та require. Загалом, як і більшість з бібліотеки класів Ruby, Kernel написаний мовою C. Тоді як Kernel, фактично, вбудований в інтерпретатор Ruby, концептуально його можна розглядати як змішаний модуль, так само як і звичайна домішка в Ruby, він робить свої методи безпосередньо доступними для класів, які завантажують його. Оскільки він є змішаним з класом Object, від якого походять всі класи в Ruby, методи з Kernel є загальнодоступними.\n"},"chapters/10-Saving-Files-Moving-On.html":{"url":"chapters/10-Saving-Files-Moving-On.html","title":"Глава 10: Збереження файлів, продовження…","body":"Глава десята\n\nРух далі...\n\nМи розглянули багато основ протягом попередніх десяти глав, проте ми лише почали відкривати всі можливості програмування на Ruby.\nОдна з областей, яку ми навіть не зачіпали, стосується розробки веб–застосунків з використанням фреймворку Rails (загальновідомого як Ruby On Rails). Хороша новина полягає в тому, що розробка з Rails тепер буде набагато простішою, адже ви маєте фундаментальне розуміння програмування на Ruby. Rails має всі інструменти, які необхідні для того, щоб побудувати та запустити простий застосунок, однак спроба написати програму на Rails без розуміння Ruby була б чимось на зразок спроби написати роман, не знаючи мови!\nIronRuby та JRuby\nТакож, ми не розглядали функціонал, який Ruby вносить до певних операційних систем. Наприклад, Sun Microsystems має версію Ruby на Java (JRuby), а Microsoft розробляє версію Ruby на .NET (IronRuby). Комерційна розробницька версія Ruby In Steel IDE підтримує всі три основні версії Ruby - звичайний Ruby, JRuby та IronRuby. Також Ruby In Steel містить безкоштовну версію IronRuby, яка включає оточення для візуальної побудови форм, схоже до тих, які надаються Microsoft для мов C# та VB. Для додаткової інформації стосовно інших версій Ruby In Steel, або щоб завантажити безкоштовне IronRuby IDE, перейдіть на вебсайт SapphireSteel Software:\nhttp://www.sapphiresteel.com\nЗбереження даних\nТепер настав час підсумувати цю Маленьку книгу про Ruby. Давайте розглянемо ще один простий проект – маленьку базу даних CD, яка дасть вам можливість створювати нові об’єкти (один для кожного диску у вашій колекції CD), додавати їх до масиву та зберегти на ваш диск.\nДля того, щоб зберігати данні на диск я використовую бібліотеку YAML:\n# збереження даних на диск у форматі YAML\ndef saveDB\n    File.open($fn, &#39;w&#39;) { |f|\n        f.write($cd_arr.to_yaml)\n    }\nend\n\nYAML\nYAML описує формат збереження даних у вигляді зрозумілого для людини тексту. Дані можна згодом завантажувати з диску, щоб відновлювати масив об’єктів CD у пам’яті:\ndef loadDB\n    input_data = File.read($fn)\n    $cd_arr = YAML::load(input_data)\nend\n\nБільша частина коду з цієї маленької програми має бути схожими на наші попередні проекти. Однак, деякі речі слід підкреслити.\nПо–перше, змінні, які починаються зі знаку долара $, є глобальними, тому вони доступні для всього коду у програмі (пригадайте змінні екземплярів, які починаються з @ — доступ до них обмежується певним об’єктом; локальні змінні, які починаються з маленької літери, доступні для використання лише всередині чітко визначеної області видимості, як от всередині певного методу).\nФайли\nТакож, зверніть увагу на те, що ми використовуємо клас File, щоб перевірити, чи файл існує:\nif File.exist?($fn)\n\nТут, exist? є методом класу – він належить класу File, а не його екземпляру. Це пояснює те, як ми можемо виконувати метод з самого File, замість того, щоб виконувати його від нового об’єкту File. Це може нагадати вам методи модулів, про які йшла мова у дев’ятій главі – ще один приклад схожості між модулями та класами.\nРух далі…\nСпільнота Ruby зараз дуже активна і постійно поповнюється новими проектами. Щоб триматись в курсі, ми радимо вам відвідати сайт Sapphire In Steel (www.sapphiresteel.com), щоб знайти посилання на найкорисніші ресурси для Ruby–програмістів. Ми також додаватимемо більше керівництв та прикладів проектів на наш сайт, щоб продовжити ваше заглиблення у програмування на Ruby.\nНа завершення, я сподіваюсь, вам сподобався цей маленький вступ у мову Ruby, і він буде лише початком для багатьох років приємної та продуктивної роботи з Ruby.\n"}}}